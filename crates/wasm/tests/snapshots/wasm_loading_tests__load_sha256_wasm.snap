---
source: crates/wasm/tests/wasm_loading_tests.rs
expression: snapshot_content
---
---
source: crates/wasm/tests/wasm_loading_tests.rs
expression: wasm_load_result
---
WASM File: sha256.wasm
============================================================
Success: true
Functions loaded: 5
============================================================
Module Output:
func_0:
  Node { operation: Inputs, inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 16711935 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 8 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -16711936 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Rotl), inputs: [ValueOrigin { node: 6, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: FunctionOrLoop }), inputs: [ValueOrigin { node: 8, output_idx: 0 }], output_types: [] }
func_1:
  Node { operation: Inputs, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 6, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 3, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 17, output_idx: 0 }, ValueOrigin { node: 18, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 16, output_idx: 0 }, ValueOrigin { node: 19, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 21, output_idx: 0 }, ValueOrigin { node: 22, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 13 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 24, output_idx: 0 }, ValueOrigin { node: 25, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 23, output_idx: 0 }, ValueOrigin { node: 26, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 22 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 28, output_idx: 0 }, ValueOrigin { node: 29, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 27, output_idx: 0 }, ValueOrigin { node: 30, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 32, output_idx: 0 }, ValueOrigin { node: 33, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 11 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 35, output_idx: 0 }, ValueOrigin { node: 36, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 34, output_idx: 0 }, ValueOrigin { node: 37, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 25 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 39, output_idx: 0 }, ValueOrigin { node: 40, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 38, output_idx: 0 }, ValueOrigin { node: 41, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 43, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 44, output_idx: 0 }, ValueOrigin { node: 42, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 45, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 46, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 4 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 31, output_idx: 0 }, ValueOrigin { node: 20, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 49, output_idx: 0 }, ValueOrigin { node: 47, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 7 }), inputs: [ValueOrigin { node: 50, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 47, output_idx: 0 }, ValueOrigin { node: 48, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 3 }), inputs: [ValueOrigin { node: 52, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 54, output_idx: 0 }, ValueOrigin { node: 55, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 57, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 58, output_idx: 0 }, ValueOrigin { node: 59, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 56, output_idx: 0 }, ValueOrigin { node: 60, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 62, output_idx: 0 }, ValueOrigin { node: 63, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 65, output_idx: 0 }, ValueOrigin { node: 66, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 64, output_idx: 0 }, ValueOrigin { node: 67, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 69, output_idx: 0 }, ValueOrigin { node: 70, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 68, output_idx: 0 }, ValueOrigin { node: 71, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 73, output_idx: 0 }, ValueOrigin { node: 22, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 75, output_idx: 0 }, ValueOrigin { node: 25, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 74, output_idx: 0 }, ValueOrigin { node: 76, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 78, output_idx: 0 }, ValueOrigin { node: 29, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 77, output_idx: 0 }, ValueOrigin { node: 79, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 81, output_idx: 0 }, ValueOrigin { node: 33, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 83, output_idx: 0 }, ValueOrigin { node: 36, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 82, output_idx: 0 }, ValueOrigin { node: 84, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 86, output_idx: 0 }, ValueOrigin { node: 40, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 85, output_idx: 0 }, ValueOrigin { node: 87, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 89, output_idx: 0 }, ValueOrigin { node: 61, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 90, output_idx: 0 }, ValueOrigin { node: 88, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 91, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 92, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 5 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 80, output_idx: 0 }, ValueOrigin { node: 72, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 95, output_idx: 0 }, ValueOrigin { node: 93, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 6 }), inputs: [ValueOrigin { node: 96, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 93, output_idx: 0 }, ValueOrigin { node: 94, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 2 }), inputs: [ValueOrigin { node: 98, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 100, output_idx: 0 }, ValueOrigin { node: 101, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 103, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 104, output_idx: 0 }, ValueOrigin { node: 105, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 102, output_idx: 0 }, ValueOrigin { node: 106, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 108, output_idx: 0 }, ValueOrigin { node: 109, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 111, output_idx: 0 }, ValueOrigin { node: 112, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 110, output_idx: 0 }, ValueOrigin { node: 113, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 115, output_idx: 0 }, ValueOrigin { node: 116, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 114, output_idx: 0 }, ValueOrigin { node: 117, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 119, output_idx: 0 }, ValueOrigin { node: 22, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 121, output_idx: 0 }, ValueOrigin { node: 25, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 120, output_idx: 0 }, ValueOrigin { node: 122, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 124, output_idx: 0 }, ValueOrigin { node: 29, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 123, output_idx: 0 }, ValueOrigin { node: 125, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 127, output_idx: 0 }, ValueOrigin { node: 33, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 129, output_idx: 0 }, ValueOrigin { node: 36, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 128, output_idx: 0 }, ValueOrigin { node: 130, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 132, output_idx: 0 }, ValueOrigin { node: 40, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 131, output_idx: 0 }, ValueOrigin { node: 133, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 135, output_idx: 0 }, ValueOrigin { node: 107, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 136, output_idx: 0 }, ValueOrigin { node: 134, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 137, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 2 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 138, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 6 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 126, output_idx: 0 }, ValueOrigin { node: 118, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 141, output_idx: 0 }, ValueOrigin { node: 139, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 5 }), inputs: [ValueOrigin { node: 142, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 139, output_idx: 0 }, ValueOrigin { node: 140, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 1 }), inputs: [ValueOrigin { node: 144, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 146, output_idx: 0 }, ValueOrigin { node: 147, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 149, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 150, output_idx: 0 }, ValueOrigin { node: 151, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 148, output_idx: 0 }, ValueOrigin { node: 152, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 154, output_idx: 0 }, ValueOrigin { node: 155, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 157, output_idx: 0 }, ValueOrigin { node: 158, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 156, output_idx: 0 }, ValueOrigin { node: 159, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 161, output_idx: 0 }, ValueOrigin { node: 162, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 160, output_idx: 0 }, ValueOrigin { node: 163, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 165, output_idx: 0 }, ValueOrigin { node: 22, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 167, output_idx: 0 }, ValueOrigin { node: 25, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 166, output_idx: 0 }, ValueOrigin { node: 168, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 170, output_idx: 0 }, ValueOrigin { node: 29, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 169, output_idx: 0 }, ValueOrigin { node: 171, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 173, output_idx: 0 }, ValueOrigin { node: 33, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 175, output_idx: 0 }, ValueOrigin { node: 36, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 174, output_idx: 0 }, ValueOrigin { node: 176, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 178, output_idx: 0 }, ValueOrigin { node: 40, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 177, output_idx: 0 }, ValueOrigin { node: 179, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 181, output_idx: 0 }, ValueOrigin { node: 153, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 182, output_idx: 0 }, ValueOrigin { node: 180, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 183, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 3 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 184, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 7 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 172, output_idx: 0 }, ValueOrigin { node: 164, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 187, output_idx: 0 }, ValueOrigin { node: 185, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 4 }), inputs: [ValueOrigin { node: 188, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 185, output_idx: 0 }, ValueOrigin { node: 186, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 0 }), inputs: [ValueOrigin { node: 190, output_idx: 0 }], output_types: [] }
  Node { operation: Br(BreakTarget { depth: 0, kind: FunctionOrLoop }), inputs: [], output_types: [] }
func_2:
  Node { operation: Inputs, inputs: [], output_types: [I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Const { value: 17 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 19 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 10 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32ShrU), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 5, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 8, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 0, output_idx: 2 }, ValueOrigin { node: 10, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 18 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Rotr), inputs: [ValueOrigin { node: 0, output_idx: 2 }, ValueOrigin { node: 12, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32ShrU), inputs: [ValueOrigin { node: 0, output_idx: 2 }, ValueOrigin { node: 15, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Xor), inputs: [ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 17, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 3 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 18, output_idx: 0 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: FunctionOrLoop }), inputs: [ValueOrigin { node: 19, output_idx: 0 }], output_types: [] }
func_3:
  Node { operation: Inputs, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 104, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Eqz), inputs: [ValueOrigin { node: 1, output_idx: 0 }], output_types: [I32] }
  Node { operation: BrIfZero(BreakTarget { depth: 0, kind: Label(0) }), inputs: [ValueOrigin { node: 2, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 1779033703 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 0, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -1150833019 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 4, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 1013904242 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 8, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -1521486534 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 12, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 1359893119 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 16, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -1694144372 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 20, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 528734635 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 24, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 1541459225 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 28, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 18, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 104, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 20, output_idx: 0 }], output_types: [] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(0) }), inputs: [], output_types: [] }
  Node { operation: Label { id: 0 }, inputs: [], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 0, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 0 }), inputs: [ValueOrigin { node: 24, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 4, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 1 }), inputs: [ValueOrigin { node: 26, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 8, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 2 }), inputs: [ValueOrigin { node: 28, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 12, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 3 }), inputs: [ValueOrigin { node: 30, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 16, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 4 }), inputs: [ValueOrigin { node: 32, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 20, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 5 }), inputs: [ValueOrigin { node: 34, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 24, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 6 }), inputs: [ValueOrigin { node: 36, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 28, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalSet { global_index: 7 }), inputs: [ValueOrigin { node: 38, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 2 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 3 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 4 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 5 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 6 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 7 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 8 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 9 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 10 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 11 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 12 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 13 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 14 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 15 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 0, output_idx: 16 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1116352408 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1899447441 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1245643825 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -373957723 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 40, output_idx: 0 }, ValueOrigin { node: 41, output_idx: 0 }, ValueOrigin { node: 42, output_idx: 0 }, ValueOrigin { node: 43, output_idx: 0 }, ValueOrigin { node: 56, output_idx: 0 }, ValueOrigin { node: 57, output_idx: 0 }, ValueOrigin { node: 58, output_idx: 0 }, ValueOrigin { node: 59, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 961987163 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1508970993 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1841331548 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1424204075 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 44, output_idx: 0 }, ValueOrigin { node: 45, output_idx: 0 }, ValueOrigin { node: 46, output_idx: 0 }, ValueOrigin { node: 47, output_idx: 0 }, ValueOrigin { node: 61, output_idx: 0 }, ValueOrigin { node: 62, output_idx: 0 }, ValueOrigin { node: 63, output_idx: 0 }, ValueOrigin { node: 64, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -670586216 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 310598401 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 607225278 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1426881987 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 48, output_idx: 0 }, ValueOrigin { node: 49, output_idx: 0 }, ValueOrigin { node: 50, output_idx: 0 }, ValueOrigin { node: 51, output_idx: 0 }, ValueOrigin { node: 66, output_idx: 0 }, ValueOrigin { node: 67, output_idx: 0 }, ValueOrigin { node: 68, output_idx: 0 }, ValueOrigin { node: 69, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 1925078388 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -2132889090 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1680079193 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1046744716 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 52, output_idx: 0 }, ValueOrigin { node: 53, output_idx: 0 }, ValueOrigin { node: 54, output_idx: 0 }, ValueOrigin { node: 55, output_idx: 0 }, ValueOrigin { node: 71, output_idx: 0 }, ValueOrigin { node: 72, output_idx: 0 }, ValueOrigin { node: 73, output_idx: 0 }, ValueOrigin { node: 74, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 54, output_idx: 0 }, ValueOrigin { node: 49, output_idx: 0 }, ValueOrigin { node: 41, output_idx: 0 }, ValueOrigin { node: 40, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 55, output_idx: 0 }, ValueOrigin { node: 50, output_idx: 0 }, ValueOrigin { node: 42, output_idx: 0 }, ValueOrigin { node: 41, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 76, output_idx: 0 }, ValueOrigin { node: 51, output_idx: 0 }, ValueOrigin { node: 43, output_idx: 0 }, ValueOrigin { node: 42, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 77, output_idx: 0 }, ValueOrigin { node: 52, output_idx: 0 }, ValueOrigin { node: 44, output_idx: 0 }, ValueOrigin { node: 43, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 78, output_idx: 0 }, ValueOrigin { node: 53, output_idx: 0 }, ValueOrigin { node: 45, output_idx: 0 }, ValueOrigin { node: 44, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 79, output_idx: 0 }, ValueOrigin { node: 54, output_idx: 0 }, ValueOrigin { node: 46, output_idx: 0 }, ValueOrigin { node: 45, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 80, output_idx: 0 }, ValueOrigin { node: 55, output_idx: 0 }, ValueOrigin { node: 47, output_idx: 0 }, ValueOrigin { node: 46, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 81, output_idx: 0 }, ValueOrigin { node: 76, output_idx: 0 }, ValueOrigin { node: 48, output_idx: 0 }, ValueOrigin { node: 47, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 82, output_idx: 0 }, ValueOrigin { node: 77, output_idx: 0 }, ValueOrigin { node: 49, output_idx: 0 }, ValueOrigin { node: 48, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 83, output_idx: 0 }, ValueOrigin { node: 78, output_idx: 0 }, ValueOrigin { node: 50, output_idx: 0 }, ValueOrigin { node: 49, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 84, output_idx: 0 }, ValueOrigin { node: 79, output_idx: 0 }, ValueOrigin { node: 51, output_idx: 0 }, ValueOrigin { node: 50, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 85, output_idx: 0 }, ValueOrigin { node: 80, output_idx: 0 }, ValueOrigin { node: 52, output_idx: 0 }, ValueOrigin { node: 51, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 86, output_idx: 0 }, ValueOrigin { node: 81, output_idx: 0 }, ValueOrigin { node: 53, output_idx: 0 }, ValueOrigin { node: 52, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 87, output_idx: 0 }, ValueOrigin { node: 82, output_idx: 0 }, ValueOrigin { node: 54, output_idx: 0 }, ValueOrigin { node: 53, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 88, output_idx: 0 }, ValueOrigin { node: 83, output_idx: 0 }, ValueOrigin { node: 55, output_idx: 0 }, ValueOrigin { node: 54, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 89, output_idx: 0 }, ValueOrigin { node: 84, output_idx: 0 }, ValueOrigin { node: 76, output_idx: 0 }, ValueOrigin { node: 55, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -459576895 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -272742522 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 264347078 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 604807628 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 76, output_idx: 0 }, ValueOrigin { node: 77, output_idx: 0 }, ValueOrigin { node: 78, output_idx: 0 }, ValueOrigin { node: 79, output_idx: 0 }, ValueOrigin { node: 92, output_idx: 0 }, ValueOrigin { node: 93, output_idx: 0 }, ValueOrigin { node: 94, output_idx: 0 }, ValueOrigin { node: 95, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 770255983 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1249150122 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1555081692 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1996064986 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 80, output_idx: 0 }, ValueOrigin { node: 81, output_idx: 0 }, ValueOrigin { node: 82, output_idx: 0 }, ValueOrigin { node: 83, output_idx: 0 }, ValueOrigin { node: 97, output_idx: 0 }, ValueOrigin { node: 98, output_idx: 0 }, ValueOrigin { node: 99, output_idx: 0 }, ValueOrigin { node: 100, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -1740746414 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1473132947 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1341970488 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1084653625 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 84, output_idx: 0 }, ValueOrigin { node: 85, output_idx: 0 }, ValueOrigin { node: 86, output_idx: 0 }, ValueOrigin { node: 87, output_idx: 0 }, ValueOrigin { node: 102, output_idx: 0 }, ValueOrigin { node: 103, output_idx: 0 }, ValueOrigin { node: 104, output_idx: 0 }, ValueOrigin { node: 105, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -958395405 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -710438585 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 113926993 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 338241895 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 88, output_idx: 0 }, ValueOrigin { node: 89, output_idx: 0 }, ValueOrigin { node: 90, output_idx: 0 }, ValueOrigin { node: 91, output_idx: 0 }, ValueOrigin { node: 107, output_idx: 0 }, ValueOrigin { node: 108, output_idx: 0 }, ValueOrigin { node: 109, output_idx: 0 }, ValueOrigin { node: 110, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 90, output_idx: 0 }, ValueOrigin { node: 85, output_idx: 0 }, ValueOrigin { node: 77, output_idx: 0 }, ValueOrigin { node: 76, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 91, output_idx: 0 }, ValueOrigin { node: 86, output_idx: 0 }, ValueOrigin { node: 78, output_idx: 0 }, ValueOrigin { node: 77, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 112, output_idx: 0 }, ValueOrigin { node: 87, output_idx: 0 }, ValueOrigin { node: 79, output_idx: 0 }, ValueOrigin { node: 78, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 113, output_idx: 0 }, ValueOrigin { node: 88, output_idx: 0 }, ValueOrigin { node: 80, output_idx: 0 }, ValueOrigin { node: 79, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 114, output_idx: 0 }, ValueOrigin { node: 89, output_idx: 0 }, ValueOrigin { node: 81, output_idx: 0 }, ValueOrigin { node: 80, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 115, output_idx: 0 }, ValueOrigin { node: 90, output_idx: 0 }, ValueOrigin { node: 82, output_idx: 0 }, ValueOrigin { node: 81, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 116, output_idx: 0 }, ValueOrigin { node: 91, output_idx: 0 }, ValueOrigin { node: 83, output_idx: 0 }, ValueOrigin { node: 82, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 117, output_idx: 0 }, ValueOrigin { node: 112, output_idx: 0 }, ValueOrigin { node: 84, output_idx: 0 }, ValueOrigin { node: 83, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 118, output_idx: 0 }, ValueOrigin { node: 113, output_idx: 0 }, ValueOrigin { node: 85, output_idx: 0 }, ValueOrigin { node: 84, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 119, output_idx: 0 }, ValueOrigin { node: 114, output_idx: 0 }, ValueOrigin { node: 86, output_idx: 0 }, ValueOrigin { node: 85, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 120, output_idx: 0 }, ValueOrigin { node: 115, output_idx: 0 }, ValueOrigin { node: 87, output_idx: 0 }, ValueOrigin { node: 86, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 121, output_idx: 0 }, ValueOrigin { node: 116, output_idx: 0 }, ValueOrigin { node: 88, output_idx: 0 }, ValueOrigin { node: 87, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 122, output_idx: 0 }, ValueOrigin { node: 117, output_idx: 0 }, ValueOrigin { node: 89, output_idx: 0 }, ValueOrigin { node: 88, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 123, output_idx: 0 }, ValueOrigin { node: 118, output_idx: 0 }, ValueOrigin { node: 90, output_idx: 0 }, ValueOrigin { node: 89, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 124, output_idx: 0 }, ValueOrigin { node: 119, output_idx: 0 }, ValueOrigin { node: 91, output_idx: 0 }, ValueOrigin { node: 90, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 125, output_idx: 0 }, ValueOrigin { node: 120, output_idx: 0 }, ValueOrigin { node: 112, output_idx: 0 }, ValueOrigin { node: 91, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 666307205 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 773529912 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1294757372 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1396182291 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 112, output_idx: 0 }, ValueOrigin { node: 113, output_idx: 0 }, ValueOrigin { node: 114, output_idx: 0 }, ValueOrigin { node: 115, output_idx: 0 }, ValueOrigin { node: 128, output_idx: 0 }, ValueOrigin { node: 129, output_idx: 0 }, ValueOrigin { node: 130, output_idx: 0 }, ValueOrigin { node: 131, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 1695183700 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1986661051 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -2117940946 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1838011259 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 116, output_idx: 0 }, ValueOrigin { node: 117, output_idx: 0 }, ValueOrigin { node: 118, output_idx: 0 }, ValueOrigin { node: 119, output_idx: 0 }, ValueOrigin { node: 133, output_idx: 0 }, ValueOrigin { node: 134, output_idx: 0 }, ValueOrigin { node: 135, output_idx: 0 }, ValueOrigin { node: 136, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -1564481375 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1474664885 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1035236496 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -949202525 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 120, output_idx: 0 }, ValueOrigin { node: 121, output_idx: 0 }, ValueOrigin { node: 122, output_idx: 0 }, ValueOrigin { node: 123, output_idx: 0 }, ValueOrigin { node: 138, output_idx: 0 }, ValueOrigin { node: 139, output_idx: 0 }, ValueOrigin { node: 140, output_idx: 0 }, ValueOrigin { node: 141, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -778901479 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -694614492 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -200395387 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 275423344 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 124, output_idx: 0 }, ValueOrigin { node: 125, output_idx: 0 }, ValueOrigin { node: 126, output_idx: 0 }, ValueOrigin { node: 127, output_idx: 0 }, ValueOrigin { node: 143, output_idx: 0 }, ValueOrigin { node: 144, output_idx: 0 }, ValueOrigin { node: 145, output_idx: 0 }, ValueOrigin { node: 146, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 126, output_idx: 0 }, ValueOrigin { node: 121, output_idx: 0 }, ValueOrigin { node: 113, output_idx: 0 }, ValueOrigin { node: 112, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 127, output_idx: 0 }, ValueOrigin { node: 122, output_idx: 0 }, ValueOrigin { node: 114, output_idx: 0 }, ValueOrigin { node: 113, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 148, output_idx: 0 }, ValueOrigin { node: 123, output_idx: 0 }, ValueOrigin { node: 115, output_idx: 0 }, ValueOrigin { node: 114, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 149, output_idx: 0 }, ValueOrigin { node: 124, output_idx: 0 }, ValueOrigin { node: 116, output_idx: 0 }, ValueOrigin { node: 115, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 150, output_idx: 0 }, ValueOrigin { node: 125, output_idx: 0 }, ValueOrigin { node: 117, output_idx: 0 }, ValueOrigin { node: 116, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 151, output_idx: 0 }, ValueOrigin { node: 126, output_idx: 0 }, ValueOrigin { node: 118, output_idx: 0 }, ValueOrigin { node: 117, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 152, output_idx: 0 }, ValueOrigin { node: 127, output_idx: 0 }, ValueOrigin { node: 119, output_idx: 0 }, ValueOrigin { node: 118, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 153, output_idx: 0 }, ValueOrigin { node: 148, output_idx: 0 }, ValueOrigin { node: 120, output_idx: 0 }, ValueOrigin { node: 119, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 154, output_idx: 0 }, ValueOrigin { node: 149, output_idx: 0 }, ValueOrigin { node: 121, output_idx: 0 }, ValueOrigin { node: 120, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 155, output_idx: 0 }, ValueOrigin { node: 150, output_idx: 0 }, ValueOrigin { node: 122, output_idx: 0 }, ValueOrigin { node: 121, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 156, output_idx: 0 }, ValueOrigin { node: 151, output_idx: 0 }, ValueOrigin { node: 123, output_idx: 0 }, ValueOrigin { node: 122, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 157, output_idx: 0 }, ValueOrigin { node: 152, output_idx: 0 }, ValueOrigin { node: 124, output_idx: 0 }, ValueOrigin { node: 123, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 158, output_idx: 0 }, ValueOrigin { node: 153, output_idx: 0 }, ValueOrigin { node: 125, output_idx: 0 }, ValueOrigin { node: 124, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 159, output_idx: 0 }, ValueOrigin { node: 154, output_idx: 0 }, ValueOrigin { node: 126, output_idx: 0 }, ValueOrigin { node: 125, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 160, output_idx: 0 }, ValueOrigin { node: 155, output_idx: 0 }, ValueOrigin { node: 127, output_idx: 0 }, ValueOrigin { node: 126, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 2 }), inputs: [ValueOrigin { node: 161, output_idx: 0 }, ValueOrigin { node: 156, output_idx: 0 }, ValueOrigin { node: 148, output_idx: 0 }, ValueOrigin { node: 127, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 430227734 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 506948616 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 659060556 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 883997877 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 148, output_idx: 0 }, ValueOrigin { node: 149, output_idx: 0 }, ValueOrigin { node: 150, output_idx: 0 }, ValueOrigin { node: 151, output_idx: 0 }, ValueOrigin { node: 164, output_idx: 0 }, ValueOrigin { node: 165, output_idx: 0 }, ValueOrigin { node: 166, output_idx: 0 }, ValueOrigin { node: 167, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 958139571 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1322822218 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1537002063 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1747873779 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 152, output_idx: 0 }, ValueOrigin { node: 153, output_idx: 0 }, ValueOrigin { node: 154, output_idx: 0 }, ValueOrigin { node: 155, output_idx: 0 }, ValueOrigin { node: 169, output_idx: 0 }, ValueOrigin { node: 170, output_idx: 0 }, ValueOrigin { node: 171, output_idx: 0 }, ValueOrigin { node: 172, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 1955562222 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 2024104815 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -2067236844 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1933114872 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 156, output_idx: 0 }, ValueOrigin { node: 157, output_idx: 0 }, ValueOrigin { node: 158, output_idx: 0 }, ValueOrigin { node: 159, output_idx: 0 }, ValueOrigin { node: 174, output_idx: 0 }, ValueOrigin { node: 175, output_idx: 0 }, ValueOrigin { node: 176, output_idx: 0 }, ValueOrigin { node: 177, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: -1866530822 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1538233109 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -1090935817 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: -965641998 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 1 }), inputs: [ValueOrigin { node: 160, output_idx: 0 }, ValueOrigin { node: 161, output_idx: 0 }, ValueOrigin { node: 162, output_idx: 0 }, ValueOrigin { node: 163, output_idx: 0 }, ValueOrigin { node: 179, output_idx: 0 }, ValueOrigin { node: 180, output_idx: 0 }, ValueOrigin { node: 181, output_idx: 0 }, ValueOrigin { node: 182, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 0, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 184, output_idx: 0 }, ValueOrigin { node: 185, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 0, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 186, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 4, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 188, output_idx: 0 }, ValueOrigin { node: 189, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 4, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 190, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 8, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 192, output_idx: 0 }, ValueOrigin { node: 193, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 8, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 194, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 12, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 196, output_idx: 0 }, ValueOrigin { node: 197, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 12, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 198, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 16, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 4 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 200, output_idx: 0 }, ValueOrigin { node: 201, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 16, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 202, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 20, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 5 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 204, output_idx: 0 }, ValueOrigin { node: 205, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 20, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 206, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 24, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 6 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 208, output_idx: 0 }, ValueOrigin { node: 209, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 24, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 210, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 28, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(GlobalGet { global_index: 7 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 212, output_idx: 0 }, ValueOrigin { node: 213, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 28, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 214, output_idx: 0 }], output_types: [] }
  Node { operation: Br(BreakTarget { depth: 0, kind: FunctionOrLoop }), inputs: [], output_types: [] }
sha256:
  Node { operation: Inputs, inputs: [], output_types: [I32, I32, I32, I32] }
  Node { operation: WASMOp(I64Load { memarg: MemArg { align: 3, max_align: 3, offset: 32, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I64] }
  Node { operation: WASMOp(I32WrapI64), inputs: [ValueOrigin { node: 1, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 63 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 2 }], output_types: [I32] }
  Node { operation: WASMOp(I64ExtendI32U), inputs: [ValueOrigin { node: 0, output_idx: 2 }], output_types: [I64] }
  Node { operation: WASMOp(I64Add), inputs: [ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }], output_types: [I64] }
  Node { operation: WASMOp(I64Store { memarg: MemArg { align: 3, max_align: 3, offset: 32, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Const { value: 0 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 40, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 44, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 48, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 52, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 56, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 60, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 64, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 68, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 72, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 76, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 80, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 84, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 88, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 92, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 96, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 100, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 64 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Sub), inputs: [ValueOrigin { node: 5, output_idx: 0 }, ValueOrigin { node: 26, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32LtS), inputs: [ValueOrigin { node: 27, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }], output_types: [I32] }
  Node { operation: BrIf(BreakTarget { depth: 0, kind: Label(1) }), inputs: [ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }, ValueOrigin { node: 17, output_idx: 0 }, ValueOrigin { node: 18, output_idx: 0 }, ValueOrigin { node: 19, output_idx: 0 }, ValueOrigin { node: 20, output_idx: 0 }, ValueOrigin { node: 21, output_idx: 0 }, ValueOrigin { node: 22, output_idx: 0 }, ValueOrigin { node: 23, output_idx: 0 }, ValueOrigin { node: 24, output_idx: 0 }, ValueOrigin { node: 25, output_idx: 0 }, ValueOrigin { node: 28, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(Call { function_index: 3 }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }, ValueOrigin { node: 17, output_idx: 0 }, ValueOrigin { node: 18, output_idx: 0 }, ValueOrigin { node: 19, output_idx: 0 }, ValueOrigin { node: 20, output_idx: 0 }, ValueOrigin { node: 21, output_idx: 0 }, ValueOrigin { node: 22, output_idx: 0 }, ValueOrigin { node: 23, output_idx: 0 }, ValueOrigin { node: 24, output_idx: 0 }, ValueOrigin { node: 25, output_idx: 0 }], output_types: [] }
  Node { operation: Loop { sub_dag: BlocklessDag { nodes: [Node { operation: Inputs, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 0, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 4, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 8, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 12, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 16, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 20, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 24, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 28, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 32, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 36, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 40, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 44, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 48, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 52, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 56, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 60, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }, Node { operation: WASMOp(I32Const { value: 64 }), inputs: [], output_types: [I32] }, Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 0, output_idx: 1 }, ValueOrigin { node: 17, output_idx: 0 }], output_types: [I32] }, Node { operation: WASMOp(I32Sub), inputs: [ValueOrigin { node: 0, output_idx: 2 }, ValueOrigin { node: 17, output_idx: 0 }], output_types: [I32] }, Node { operation: WASMOp(I32Const { value: 0 }), inputs: [], output_types: [I32] }, Node { operation: WASMOp(I32LtS), inputs: [ValueOrigin { node: 19, output_idx: 0 }, ValueOrigin { node: 20, output_idx: 0 }], output_types: [I32] }, Node { operation: BrIfZero(BreakTarget { depth: 0, kind: Label(2) }), inputs: [ValueOrigin { node: 21, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 40, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 44, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 48, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 52, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 56, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 60, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 64, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 68, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 72, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 76, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 80, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 84, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 88, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 92, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 96, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }], output_types: [] }, Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 100, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }, Node { operation: Br(BreakTarget { depth: 1, kind: Label(1) }), inputs: [ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }, Node { operation: Label { id: 2 }, inputs: [], output_types: [] }, Node { operation: WASMOp(Call { function_index: 3 }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }, Node { operation: Br(BreakTarget { depth: 0, kind: FunctionOrLoop }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 18, output_idx: 0 }, ValueOrigin { node: 19, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }] }, break_targets: [(0, [Label(1)])] }, inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 0, output_idx: 1 }, ValueOrigin { node: 27, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }, ValueOrigin { node: 17, output_idx: 0 }, ValueOrigin { node: 18, output_idx: 0 }, ValueOrigin { node: 19, output_idx: 0 }, ValueOrigin { node: 20, output_idx: 0 }, ValueOrigin { node: 21, output_idx: 0 }, ValueOrigin { node: 22, output_idx: 0 }, ValueOrigin { node: 23, output_idx: 0 }, ValueOrigin { node: 24, output_idx: 0 }, ValueOrigin { node: 25, output_idx: 0 }], output_types: [] }
    Node { operation: Inputs, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 0, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 4, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 8, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 12, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 16, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 20, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 24, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 28, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 32, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 36, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 40, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 44, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 48, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 52, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 56, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 60, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 1 }], output_types: [I32] }
    Node { operation: WASMOp(I32Const { value: 64 }), inputs: [], output_types: [I32] }
    Node { operation: WASMOp(I32Add), inputs: [ValueOrigin { node: 0, output_idx: 1 }, ValueOrigin { node: 17, output_idx: 0 }], output_types: [I32] }
    Node { operation: WASMOp(I32Sub), inputs: [ValueOrigin { node: 0, output_idx: 2 }, ValueOrigin { node: 17, output_idx: 0 }], output_types: [I32] }
    Node { operation: WASMOp(I32Const { value: 0 }), inputs: [], output_types: [I32] }
    Node { operation: WASMOp(I32LtS), inputs: [ValueOrigin { node: 19, output_idx: 0 }, ValueOrigin { node: 20, output_idx: 0 }], output_types: [I32] }
    Node { operation: BrIfZero(BreakTarget { depth: 0, kind: Label(2) }), inputs: [ValueOrigin { node: 21, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 40, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 44, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 48, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 52, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 56, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 60, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 64, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 68, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 72, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 76, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 80, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 84, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 88, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 92, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 96, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }], output_types: [] }
    Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 100, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }
    Node { operation: Br(BreakTarget { depth: 1, kind: Label(1) }), inputs: [ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }
    Node { operation: Label { id: 2 }, inputs: [], output_types: [] }
    Node { operation: WASMOp(Call { function_index: 3 }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }
    Node { operation: Br(BreakTarget { depth: 0, kind: FunctionOrLoop }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 18, output_idx: 0 }, ValueOrigin { node: 19, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }, ValueOrigin { node: 8, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 10, output_idx: 0 }, ValueOrigin { node: 11, output_idx: 0 }, ValueOrigin { node: 12, output_idx: 0 }, ValueOrigin { node: 13, output_idx: 0 }, ValueOrigin { node: 14, output_idx: 0 }, ValueOrigin { node: 15, output_idx: 0 }, ValueOrigin { node: 16, output_idx: 0 }], output_types: [] }
  Node { operation: Label { id: 1 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Const { value: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Eq), inputs: [ValueOrigin { node: 0, output_idx: 3 }, ValueOrigin { node: 33, output_idx: 0 }], output_types: [I32] }
  Node { operation: BrIfZero(BreakTarget { depth: 0, kind: Label(3) }), inputs: [ValueOrigin { node: 34, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32WrapI64), inputs: [ValueOrigin { node: 7, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 36, output_idx: 0 }, ValueOrigin { node: 3, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 128 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32And), inputs: [ValueOrigin { node: 37, output_idx: 0 }, ValueOrigin { node: 39, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Shl), inputs: [ValueOrigin { node: 40, output_idx: 0 }, ValueOrigin { node: 39, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Shl), inputs: [ValueOrigin { node: 38, output_idx: 0 }, ValueOrigin { node: 41, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32ShrU), inputs: [ValueOrigin { node: 37, output_idx: 0 }, ValueOrigin { node: 43, output_idx: 0 }], output_types: [I32] }
  Node { operation: BrTable { targets: [BrTableTarget { target: BreakTarget { depth: 0, kind: Label(18) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(17) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(16) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(15) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(14) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(13) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(12) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(11) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(10) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(9) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(8) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(7) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(6) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(5) }, input_permutation: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(20) }, input_permutation: [] }, BrTableTarget { target: BreakTarget { depth: 0, kind: Label(19) }, input_permutation: [0, 15] }] }, inputs: [ValueOrigin { node: 42, output_idx: 0 }, ValueOrigin { node: 32, output_idx: 0 }, ValueOrigin { node: 32, output_idx: 1 }, ValueOrigin { node: 32, output_idx: 2 }, ValueOrigin { node: 32, output_idx: 3 }, ValueOrigin { node: 32, output_idx: 4 }, ValueOrigin { node: 32, output_idx: 5 }, ValueOrigin { node: 32, output_idx: 6 }, ValueOrigin { node: 32, output_idx: 7 }, ValueOrigin { node: 32, output_idx: 8 }, ValueOrigin { node: 32, output_idx: 9 }, ValueOrigin { node: 32, output_idx: 10 }, ValueOrigin { node: 32, output_idx: 11 }, ValueOrigin { node: 32, output_idx: 12 }, ValueOrigin { node: 32, output_idx: 13 }, ValueOrigin { node: 32, output_idx: 14 }, ValueOrigin { node: 44, output_idx: 0 }], output_types: [] }
  Node { operation: Label { id: 21 }, inputs: [], output_types: [] }
  Node { operation: WASMOp(Unreachable), inputs: [], output_types: [] }
  Node { operation: Label { id: 20 }, inputs: [], output_types: [] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 42, output_idx: 0 }, ValueOrigin { node: 32, output_idx: 14 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(19) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 49, output_idx: 0 }], output_types: [] }
  Node { operation: Label { id: 19 }, inputs: [], output_types: [I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 51, output_idx: 0 }, ValueOrigin { node: 32, output_idx: 15 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 3 }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 32, output_idx: 0 }, ValueOrigin { node: 32, output_idx: 1 }, ValueOrigin { node: 32, output_idx: 2 }, ValueOrigin { node: 32, output_idx: 3 }, ValueOrigin { node: 32, output_idx: 4 }, ValueOrigin { node: 32, output_idx: 5 }, ValueOrigin { node: 32, output_idx: 6 }, ValueOrigin { node: 32, output_idx: 7 }, ValueOrigin { node: 32, output_idx: 8 }, ValueOrigin { node: 32, output_idx: 9 }, ValueOrigin { node: 32, output_idx: 10 }, ValueOrigin { node: 32, output_idx: 11 }, ValueOrigin { node: 32, output_idx: 12 }, ValueOrigin { node: 32, output_idx: 13 }, ValueOrigin { node: 51, output_idx: 1 }, ValueOrigin { node: 52, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I64Store { memarg: MemArg { align: 3, max_align: 3, offset: 32, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 7, output_idx: 0 }], output_types: [] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(18) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 9, output_idx: 0 }], output_types: [] }
  Node { operation: Label { id: 18 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 56, output_idx: 0 }, ValueOrigin { node: 56, output_idx: 1 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(17) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 57, output_idx: 0 }, ValueOrigin { node: 56, output_idx: 2 }, ValueOrigin { node: 56, output_idx: 3 }, ValueOrigin { node: 56, output_idx: 4 }, ValueOrigin { node: 56, output_idx: 5 }, ValueOrigin { node: 56, output_idx: 6 }, ValueOrigin { node: 56, output_idx: 7 }, ValueOrigin { node: 56, output_idx: 8 }, ValueOrigin { node: 56, output_idx: 9 }, ValueOrigin { node: 56, output_idx: 10 }, ValueOrigin { node: 56, output_idx: 11 }, ValueOrigin { node: 56, output_idx: 12 }, ValueOrigin { node: 56, output_idx: 13 }, ValueOrigin { node: 56, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 17 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 59, output_idx: 0 }, ValueOrigin { node: 59, output_idx: 2 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(16) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 59, output_idx: 1 }, ValueOrigin { node: 60, output_idx: 0 }, ValueOrigin { node: 59, output_idx: 3 }, ValueOrigin { node: 59, output_idx: 4 }, ValueOrigin { node: 59, output_idx: 5 }, ValueOrigin { node: 59, output_idx: 6 }, ValueOrigin { node: 59, output_idx: 7 }, ValueOrigin { node: 59, output_idx: 8 }, ValueOrigin { node: 59, output_idx: 9 }, ValueOrigin { node: 59, output_idx: 10 }, ValueOrigin { node: 59, output_idx: 11 }, ValueOrigin { node: 59, output_idx: 12 }, ValueOrigin { node: 59, output_idx: 13 }, ValueOrigin { node: 59, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 16 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 62, output_idx: 0 }, ValueOrigin { node: 62, output_idx: 3 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(15) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 62, output_idx: 1 }, ValueOrigin { node: 62, output_idx: 2 }, ValueOrigin { node: 63, output_idx: 0 }, ValueOrigin { node: 62, output_idx: 4 }, ValueOrigin { node: 62, output_idx: 5 }, ValueOrigin { node: 62, output_idx: 6 }, ValueOrigin { node: 62, output_idx: 7 }, ValueOrigin { node: 62, output_idx: 8 }, ValueOrigin { node: 62, output_idx: 9 }, ValueOrigin { node: 62, output_idx: 10 }, ValueOrigin { node: 62, output_idx: 11 }, ValueOrigin { node: 62, output_idx: 12 }, ValueOrigin { node: 62, output_idx: 13 }, ValueOrigin { node: 62, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 15 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 65, output_idx: 0 }, ValueOrigin { node: 65, output_idx: 4 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(14) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 65, output_idx: 1 }, ValueOrigin { node: 65, output_idx: 2 }, ValueOrigin { node: 65, output_idx: 3 }, ValueOrigin { node: 66, output_idx: 0 }, ValueOrigin { node: 65, output_idx: 5 }, ValueOrigin { node: 65, output_idx: 6 }, ValueOrigin { node: 65, output_idx: 7 }, ValueOrigin { node: 65, output_idx: 8 }, ValueOrigin { node: 65, output_idx: 9 }, ValueOrigin { node: 65, output_idx: 10 }, ValueOrigin { node: 65, output_idx: 11 }, ValueOrigin { node: 65, output_idx: 12 }, ValueOrigin { node: 65, output_idx: 13 }, ValueOrigin { node: 65, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 14 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 68, output_idx: 0 }, ValueOrigin { node: 68, output_idx: 5 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(13) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 68, output_idx: 1 }, ValueOrigin { node: 68, output_idx: 2 }, ValueOrigin { node: 68, output_idx: 3 }, ValueOrigin { node: 68, output_idx: 4 }, ValueOrigin { node: 69, output_idx: 0 }, ValueOrigin { node: 68, output_idx: 6 }, ValueOrigin { node: 68, output_idx: 7 }, ValueOrigin { node: 68, output_idx: 8 }, ValueOrigin { node: 68, output_idx: 9 }, ValueOrigin { node: 68, output_idx: 10 }, ValueOrigin { node: 68, output_idx: 11 }, ValueOrigin { node: 68, output_idx: 12 }, ValueOrigin { node: 68, output_idx: 13 }, ValueOrigin { node: 68, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 13 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 71, output_idx: 0 }, ValueOrigin { node: 71, output_idx: 6 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(12) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 71, output_idx: 1 }, ValueOrigin { node: 71, output_idx: 2 }, ValueOrigin { node: 71, output_idx: 3 }, ValueOrigin { node: 71, output_idx: 4 }, ValueOrigin { node: 71, output_idx: 5 }, ValueOrigin { node: 72, output_idx: 0 }, ValueOrigin { node: 71, output_idx: 7 }, ValueOrigin { node: 71, output_idx: 8 }, ValueOrigin { node: 71, output_idx: 9 }, ValueOrigin { node: 71, output_idx: 10 }, ValueOrigin { node: 71, output_idx: 11 }, ValueOrigin { node: 71, output_idx: 12 }, ValueOrigin { node: 71, output_idx: 13 }, ValueOrigin { node: 71, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 12 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 74, output_idx: 0 }, ValueOrigin { node: 74, output_idx: 7 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(11) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 74, output_idx: 1 }, ValueOrigin { node: 74, output_idx: 2 }, ValueOrigin { node: 74, output_idx: 3 }, ValueOrigin { node: 74, output_idx: 4 }, ValueOrigin { node: 74, output_idx: 5 }, ValueOrigin { node: 74, output_idx: 6 }, ValueOrigin { node: 75, output_idx: 0 }, ValueOrigin { node: 74, output_idx: 8 }, ValueOrigin { node: 74, output_idx: 9 }, ValueOrigin { node: 74, output_idx: 10 }, ValueOrigin { node: 74, output_idx: 11 }, ValueOrigin { node: 74, output_idx: 12 }, ValueOrigin { node: 74, output_idx: 13 }, ValueOrigin { node: 74, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 11 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 77, output_idx: 0 }, ValueOrigin { node: 77, output_idx: 8 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(10) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 77, output_idx: 1 }, ValueOrigin { node: 77, output_idx: 2 }, ValueOrigin { node: 77, output_idx: 3 }, ValueOrigin { node: 77, output_idx: 4 }, ValueOrigin { node: 77, output_idx: 5 }, ValueOrigin { node: 77, output_idx: 6 }, ValueOrigin { node: 77, output_idx: 7 }, ValueOrigin { node: 78, output_idx: 0 }, ValueOrigin { node: 77, output_idx: 9 }, ValueOrigin { node: 77, output_idx: 10 }, ValueOrigin { node: 77, output_idx: 11 }, ValueOrigin { node: 77, output_idx: 12 }, ValueOrigin { node: 77, output_idx: 13 }, ValueOrigin { node: 77, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 10 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 80, output_idx: 0 }, ValueOrigin { node: 80, output_idx: 9 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(9) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 80, output_idx: 1 }, ValueOrigin { node: 80, output_idx: 2 }, ValueOrigin { node: 80, output_idx: 3 }, ValueOrigin { node: 80, output_idx: 4 }, ValueOrigin { node: 80, output_idx: 5 }, ValueOrigin { node: 80, output_idx: 6 }, ValueOrigin { node: 80, output_idx: 7 }, ValueOrigin { node: 80, output_idx: 8 }, ValueOrigin { node: 81, output_idx: 0 }, ValueOrigin { node: 80, output_idx: 10 }, ValueOrigin { node: 80, output_idx: 11 }, ValueOrigin { node: 80, output_idx: 12 }, ValueOrigin { node: 80, output_idx: 13 }, ValueOrigin { node: 80, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 9 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 83, output_idx: 0 }, ValueOrigin { node: 83, output_idx: 10 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(8) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 83, output_idx: 1 }, ValueOrigin { node: 83, output_idx: 2 }, ValueOrigin { node: 83, output_idx: 3 }, ValueOrigin { node: 83, output_idx: 4 }, ValueOrigin { node: 83, output_idx: 5 }, ValueOrigin { node: 83, output_idx: 6 }, ValueOrigin { node: 83, output_idx: 7 }, ValueOrigin { node: 83, output_idx: 8 }, ValueOrigin { node: 83, output_idx: 9 }, ValueOrigin { node: 84, output_idx: 0 }, ValueOrigin { node: 83, output_idx: 11 }, ValueOrigin { node: 83, output_idx: 12 }, ValueOrigin { node: 83, output_idx: 13 }, ValueOrigin { node: 83, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 8 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 86, output_idx: 0 }, ValueOrigin { node: 86, output_idx: 11 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(7) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 86, output_idx: 1 }, ValueOrigin { node: 86, output_idx: 2 }, ValueOrigin { node: 86, output_idx: 3 }, ValueOrigin { node: 86, output_idx: 4 }, ValueOrigin { node: 86, output_idx: 5 }, ValueOrigin { node: 86, output_idx: 6 }, ValueOrigin { node: 86, output_idx: 7 }, ValueOrigin { node: 86, output_idx: 8 }, ValueOrigin { node: 86, output_idx: 9 }, ValueOrigin { node: 86, output_idx: 10 }, ValueOrigin { node: 87, output_idx: 0 }, ValueOrigin { node: 86, output_idx: 12 }, ValueOrigin { node: 86, output_idx: 13 }, ValueOrigin { node: 86, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 7 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 89, output_idx: 0 }, ValueOrigin { node: 89, output_idx: 12 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(6) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 89, output_idx: 1 }, ValueOrigin { node: 89, output_idx: 2 }, ValueOrigin { node: 89, output_idx: 3 }, ValueOrigin { node: 89, output_idx: 4 }, ValueOrigin { node: 89, output_idx: 5 }, ValueOrigin { node: 89, output_idx: 6 }, ValueOrigin { node: 89, output_idx: 7 }, ValueOrigin { node: 89, output_idx: 8 }, ValueOrigin { node: 89, output_idx: 9 }, ValueOrigin { node: 89, output_idx: 10 }, ValueOrigin { node: 89, output_idx: 11 }, ValueOrigin { node: 90, output_idx: 0 }, ValueOrigin { node: 89, output_idx: 13 }, ValueOrigin { node: 89, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 6 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 92, output_idx: 0 }, ValueOrigin { node: 92, output_idx: 13 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(5) }), inputs: [ValueOrigin { node: 9, output_idx: 0 }, ValueOrigin { node: 92, output_idx: 1 }, ValueOrigin { node: 92, output_idx: 2 }, ValueOrigin { node: 92, output_idx: 3 }, ValueOrigin { node: 92, output_idx: 4 }, ValueOrigin { node: 92, output_idx: 5 }, ValueOrigin { node: 92, output_idx: 6 }, ValueOrigin { node: 92, output_idx: 7 }, ValueOrigin { node: 92, output_idx: 8 }, ValueOrigin { node: 92, output_idx: 9 }, ValueOrigin { node: 92, output_idx: 10 }, ValueOrigin { node: 92, output_idx: 11 }, ValueOrigin { node: 92, output_idx: 12 }, ValueOrigin { node: 93, output_idx: 0 }, ValueOrigin { node: 92, output_idx: 14 }], output_types: [] }
  Node { operation: Label { id: 5 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I32Or), inputs: [ValueOrigin { node: 95, output_idx: 0 }, ValueOrigin { node: 95, output_idx: 14 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(4) }), inputs: [ValueOrigin { node: 95, output_idx: 1 }, ValueOrigin { node: 95, output_idx: 2 }, ValueOrigin { node: 95, output_idx: 3 }, ValueOrigin { node: 95, output_idx: 4 }, ValueOrigin { node: 95, output_idx: 5 }, ValueOrigin { node: 95, output_idx: 6 }, ValueOrigin { node: 95, output_idx: 7 }, ValueOrigin { node: 95, output_idx: 8 }, ValueOrigin { node: 95, output_idx: 9 }, ValueOrigin { node: 95, output_idx: 10 }, ValueOrigin { node: 95, output_idx: 11 }, ValueOrigin { node: 95, output_idx: 12 }, ValueOrigin { node: 95, output_idx: 13 }, ValueOrigin { node: 96, output_idx: 0 }], output_types: [] }
  Node { operation: Label { id: 4 }, inputs: [], output_types: [I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32, I32] }
  Node { operation: WASMOp(I64Const { value: 29 }), inputs: [], output_types: [I64] }
  Node { operation: WASMOp(I64ShrU), inputs: [ValueOrigin { node: 7, output_idx: 0 }, ValueOrigin { node: 99, output_idx: 0 }], output_types: [I64] }
  Node { operation: WASMOp(I32WrapI64), inputs: [ValueOrigin { node: 100, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 101, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I64Const { value: 3 }), inputs: [], output_types: [I64] }
  Node { operation: WASMOp(I64Shl), inputs: [ValueOrigin { node: 7, output_idx: 0 }, ValueOrigin { node: 103, output_idx: 0 }], output_types: [I64] }
  Node { operation: WASMOp(I32WrapI64), inputs: [ValueOrigin { node: 104, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 105, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 3 }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 98, output_idx: 0 }, ValueOrigin { node: 98, output_idx: 1 }, ValueOrigin { node: 98, output_idx: 2 }, ValueOrigin { node: 98, output_idx: 3 }, ValueOrigin { node: 98, output_idx: 4 }, ValueOrigin { node: 98, output_idx: 5 }, ValueOrigin { node: 98, output_idx: 6 }, ValueOrigin { node: 98, output_idx: 7 }, ValueOrigin { node: 98, output_idx: 8 }, ValueOrigin { node: 98, output_idx: 9 }, ValueOrigin { node: 98, output_idx: 10 }, ValueOrigin { node: 98, output_idx: 11 }, ValueOrigin { node: 98, output_idx: 12 }, ValueOrigin { node: 98, output_idx: 13 }, ValueOrigin { node: 102, output_idx: 0 }, ValueOrigin { node: 106, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 0, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 108, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 0, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 109, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 4, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 111, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 4, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 112, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 8, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 114, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 8, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 115, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 12, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 117, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 12, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 118, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 16, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 120, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 16, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 121, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 20, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 123, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 20, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 124, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 24, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 126, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 24, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 127, output_idx: 0 }], output_types: [] }
  Node { operation: WASMOp(I32Load { memarg: MemArg { align: 2, max_align: 2, offset: 28, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Call { function_index: 0 }), inputs: [ValueOrigin { node: 129, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Store { memarg: MemArg { align: 2, max_align: 2, offset: 28, memory: 0 } }), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 130, output_idx: 0 }], output_types: [] }
  Node { operation: Br(BreakTarget { depth: 0, kind: Label(3) }), inputs: [], output_types: [] }
  Node { operation: Label { id: 3 }, inputs: [], output_types: [] }
  Node { operation: Br(BreakTarget { depth: 0, kind: FunctionOrLoop }), inputs: [], output_types: [] }
