---
source: crates/wasm/tests/wasm_loading_tests.rs
expression: snapshot_content
---
---
source: crates/wasm/tests/wasm_loading_tests.rs
expression: wasm_load_result
---
WASM File: if_statement.wasm
============================================================
Success: true
Functions loaded: 1
============================================================
Module Output:
f:
  Node { operation: Inputs, inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 1 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 2 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Ne), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 2, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Shl), inputs: [ValueOrigin { node: 3, output_idx: 0 }, ValueOrigin { node: 1, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(I32Const { value: 3 }), inputs: [], output_types: [I32] }
  Node { operation: WASMOp(I32Eq), inputs: [ValueOrigin { node: 0, output_idx: 0 }, ValueOrigin { node: 5, output_idx: 0 }], output_types: [I32] }
  Node { operation: WASMOp(Select), inputs: [ValueOrigin { node: 1, output_idx: 0 }, ValueOrigin { node: 4, output_idx: 0 }, ValueOrigin { node: 6, output_idx: 0 }], output_types: [I32] }
  Node { operation: Br(BreakTarget { depth: 0, kind: FunctionOrLoop }), inputs: [ValueOrigin { node: 7, output_idx: 0 }], output_types: [] }
