fn main() -> felt {
    let x = 3;
    let y = 13;
    let even_number = 16;
    let eq = x == y;
    let mut_val = 1;
    let eq_felt = 0;
    if (eq){
        eq_felt = 1;
        mut_val = mut_val + eq_felt + 1;
    }
    mut_val = mut_val * mut_val;
    mut_val = mut_val + (even_number / 2);

    let eq2 = (x == 3);
    let eq2_felt = 0;
    if (eq2){
        eq2_felt = 1;
    }

    let tempvar = 0;
    if (y == 3) {
        tempvar = 1;
    }
    let compound1 = (x != 0) || ((tempvar) + 2 != 0);
    let compound1_felt = 0;
    if (compound1){
        compound1_felt = 1;
    }
    let compound2 = (eq_felt != 2) && (3 != 0);

    let compound2_felt = 0;
    if (compound2){
        compound2_felt = 1;
    }

    let (a, b) = foo();
    return mut_val + eq2_felt + a + bar() + b + compound1_felt + compound2_felt;
}

fn foo() -> (felt, felt) {
    return (32, 62);
}

fn bar() -> felt {
    return 123;
}
