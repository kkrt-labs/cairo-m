---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Arrays in Cairo-M - Arrays with Aggregate Types 3"
input_file: mdtest/01-basics/05-arrays.md
---
Source:
    struct C { c: u32 }
    struct B { b: C }
    struct A { a: B }

    fn test_main() -> u32 {
        let arr: [A; 1] = [A { a: B { b: C { c: 0 } } }];
        arr[0].a.b.c = 42;
        return arr[0].a.b.c;
    }
============================================================
Generated CASM:
test_main:
test_main:
test_main_0:
   0: 23 0 0 0             // [fp + 0], [fp + 1] = u32(0)
   1: 4 0 0 2              // [fp + 2] = [fp + 0] + 0
   2: 4 1 0 3              // [fp + 3] = [fp + 1] + 0
   3: 4 2 0 4              // [fp + 4] = [fp + 2] + 0
   4: 4 3 0 5              // [fp + 5] = [fp + 3] + 0
   5: 4 4 0 17             // [fp + 17] = [fp + 4] + 0
   6: 4 5 0 18             // [fp + 18] = [fp + 5] + 0
   7: 43 17 6 _            // [fp + 6] = fp + 17
   8: 8 6 0 7              // [fp + 7] = [[fp + 6] + 0] (load slot 0)
   9: 8 6 1 8              // [fp + 8] = [[fp + 6] + 1] (load slot 1)
  10: 23 42 0 19           // [fp + 19], [fp + 20] = u32(42)
  11: 44 6 0 19            // [[fp + 6] + 0] = [fp + 19] (u32 slot 0)
  12: 44 6 1 20            // [[fp + 6] + 1] = [fp + 20] (u32 slot 1)
  13: 8 6 0 9              // [fp + 9] = [[fp + 6] + 0] (load slot 0)
  14: 8 6 1 10             // [fp + 10] = [[fp + 6] + 1] (load slot 1)
  15: 8 6 0 11             // [fp + 11] = [[fp + 6] + 0] (load slot 0)
  16: 8 6 1 12             // [fp + 12] = [[fp + 6] + 1] (load slot 1)
  17: 8 6 0 13             // [fp + 13] = [[fp + 6] + 0] (load slot 0)
  18: 8 6 1 14             // [fp + 14] = [[fp + 6] + 1] (load slot 1)
  19: 8 6 0 15             // [fp + 15] = [[fp + 6] + 0] (load slot 0)
  20: 8 6 1 16             // [fp + 16] = [[fp + 6] + 1] (load slot 1)
  21: 4 15 0 2147483643    // Return value 0 slot 0: [fp -4] = [fp + 15] + 0
  22: 4 16 0 2147483644    // Return value 0 slot 1: [fp -3] = [fp + 16] + 0
  23: 11 _ _ _             // return
