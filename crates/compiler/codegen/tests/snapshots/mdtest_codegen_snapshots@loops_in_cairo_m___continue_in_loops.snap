---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Loops in Cairo-M - Continue in Loops"
input_file: mdtest/02-control-flow/02-loops.md
---
Source:
fn continue_in_loop() -> felt {
    let sum = 0;
    for (let i = 0; i != 10; i = i + 1) {
        if i == 5 {
            continue;
        }
        sum = sum + i;
    }
    return sum;
}
============================================================
Generated CASM:
continue_in_loop:
continue_in_loop:
continue_in_loop_0:
   0: 9 0 0 _              // [fp + 0] = 0
   1: 9 0 1 _              // [fp + 1] = 0
continue_in_loop_1:
   2: 5 1 10 4             // [fp + 4] = [fp + 1] op 10
   3: 14 4 2 _             // if [fp + 4] != 0 jmp rel continue_in_loop_2
   4: 12 11 _ _            // jump abs continue_in_loop_4
continue_in_loop_2:
   5: 5 1 5 5              // [fp + 5] = [fp + 1] op 5
   6: 14 5 8 _             // if [fp + 5] != 0 jmp rel continue_in_loop_6
   7: 12 13 _ _            // jump abs continue_in_loop_5
continue_in_loop_3:
   8: 4 1 0 6              // [fp + 6] = [fp + 1] + 0
   9: 4 6 1 1              // [fp + 1] = [fp + 6] op 1
  10: 12 2 _ _             // jump abs continue_in_loop_1
continue_in_loop_4:
  11: 4 0 0 -3             // Return value 0: [fp -3] = [fp + 0] + 0
  12: 11 _ _ _             // return
continue_in_loop_5:
  13: 12 8 _ _             // jump abs continue_in_loop_3
continue_in_loop_6:
  14: 4 0 0 6              // [fp + 6] = [fp + 0] + 0
  15: 0 6 1 0              // [fp + 0] = [fp + 6] op [fp + 1]
  16: 12 8 _ _             // jump abs continue_in_loop_3
