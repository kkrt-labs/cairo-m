---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Loops in Cairo-M - Continue in Loops"
input_file: mdtest/02-control-flow/02-loops.md
---
Source:
fn continue_in_loop() -> felt {
    let sum = 0;
    for (let i = 0; i != 10; i = i + 1) {
        if i == 5 {
            continue;
        }
        sum = sum + i;
    }
    return sum;
}
============================================================
Generated CASM:
continue_in_loop:
continue_in_loop:
continue_in_loop_0:
   0: 9 0 0 _              // [fp + 0] = 0
   1: 9 0 1 _              // [fp + 1] = 0
   2: 4 0 0 2              // [fp + 2] = [fp + 0] + 0
   3: 4 1 0 3              // [fp + 3] = [fp + 1] + 0
continue_in_loop_1:
   4: 4 3 2147483637 7     // [fp + 7] = [fp + 3] op 10
   5: 14 7 2 _             // if [fp + 7] != 0 jmp rel continue_in_loop_2
   6: 12 14 _ _            // jump abs continue_in_loop_4
continue_in_loop_2:
   7: 4 3 2147483642 8     // [fp + 8] = [fp + 3] op 5
   8: 14 8 10 _            // if [fp + 8] != 0 jmp rel continue_in_loop_6
   9: 12 16 _ _            // jump abs continue_in_loop_5
continue_in_loop_3:
  10: 4 3 1 4              // [fp + 4] = [fp + 3] op 1
  11: 4 5 0 2              // [fp + 2] = [fp + 5] + 0
  12: 4 4 0 3              // [fp + 3] = [fp + 4] + 0
  13: 12 4 _ _             // jump abs continue_in_loop_1
continue_in_loop_4:
  14: 4 2 0 -3             // Return value 0: [fp -3] = [fp + 2] + 0
  15: 11 _ _ _             // return
continue_in_loop_5:
  16: 4 2 0 5              // [fp + 5] = [fp + 2] + 0
  17: 12 10 _ _            // jump abs continue_in_loop_3
continue_in_loop_6:
  18: 0 2 3 6              // [fp + 6] = [fp + 2] op [fp + 3]
  19: 4 6 0 5              // [fp + 5] = [fp + 6] + 0
  20: 12 10 _ _            // jump abs continue_in_loop_3
