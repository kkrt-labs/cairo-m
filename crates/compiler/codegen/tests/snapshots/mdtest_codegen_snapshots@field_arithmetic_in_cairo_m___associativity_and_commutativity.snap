---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Field Arithmetic in Cairo-M - Associativity and Commutativity"
input_file: mdtest/01-basics/04-arithmetic.md
---
Source:
fn test_properties() -> felt {
    let a = 12;
    let b = 8;
    let c = 5;

    // Associativity: (a + b) + c == a + (b + c)
    let assoc1 = (a + b) + c;
    let assoc2 = a + (b + c);

    // Commutativity: a * b == b * a
    let comm1 = a * b;
    let comm2 = b * a;

    // Should be 0 if properties hold
    return (assoc1 - assoc2) + (comm1 - comm2);  // Returns 0
}
============================================================
Generated CASM:
test_properties:
test_properties:
test_properties_0:
   0: 9 12 0 _             // [fp + 0] = 12
   1: 9 8 1 _              // [fp + 1] = 8
   2: 9 5 2 _              // [fp + 2] = 5
   3: 0 0 1 3              // [fp + 3] = [fp + 0] op [fp + 1]
   4: 0 3 2 4              // [fp + 4] = [fp + 3] op [fp + 2]
   5: 0 1 2 5              // [fp + 5] = [fp + 1] op [fp + 2]
   6: 0 0 5 6              // [fp + 6] = [fp + 0] op [fp + 5]
   7: 2 0 1 7              // [fp + 7] = [fp + 0] op [fp + 1]
   8: 2 1 0 8              // [fp + 8] = [fp + 1] op [fp + 0]
   9: 1 4 6 9              // [fp + 9] = [fp + 4] op [fp + 6]
  10: 1 7 8 10             // [fp + 10] = [fp + 7] op [fp + 8]
  11: 0 9 10 -3            // [fp + -3] = [fp + 9] op [fp + 10]
  12: 11 _ _ _             // return
