---
source: crates/compiler/codegen/tests/codegen_auto_discovery.rs
description: Codegen snapshot for control_flow/simple_while.cm
input_file: test_data/control_flow/simple_while.cm
---
Fixture: control_flow/simple_while.cm
============================================================
Source code:
fn test_simple_while() -> felt {
    let i = 0;
    let sum = 0;

    while (i != 10) {
        sum = sum + i;
        i = i + 1;
    }

    return sum;
}

============================================================
Generated CASM:
test_simple_while:
test_simple_while:
test_simple_while_0:
   0: 9 0 0 _              // [fp + 0] = 0
   1: 9 0 1 _              // [fp + 1] = 0
test_simple_while_1:
   2: 5 0 10 4             // [fp + 4] = [fp + 0] op 10
   3: 14 4 2 _             // if [fp + 4] != 0 jmp rel test_simple_while_2
   4: 12 10 _ _            // jump abs test_simple_while_3
test_simple_while_2:
   5: 4 1 0 5              // [fp + 5] = [fp + 1] + 0
   6: 0 5 0 1              // [fp + 1] = [fp + 5] op [fp + 0]
   7: 4 0 0 5              // [fp + 5] = [fp + 0] + 0
   8: 4 5 1 0              // [fp + 0] = [fp + 5] op 1
   9: 12 2 _ _             // jump abs test_simple_while_1
test_simple_while_3:
  10: 4 1 0 -3             // Return value 0: [fp -3] = [fp + 1] + 0
  11: 11 _ _ _             // return
