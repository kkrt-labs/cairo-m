---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Structs in Cairo-M - Multi-Slot Aggregate Store"
input_file: mdtest/03-types/02-structs.md
---
Source:
struct U32Pair {
    first: u32,
    second: u32,
}

fn test_multi_slot_store() -> u32 {
    let s1 = U32Pair { first: 100u32, second: 200u32 };
    let s2 = s1;  // This should copy all 4 slots (2 for each u32)

    // Return the sum to verify both fields were copied
    return s2.first + s2.second;  // Should return 300
}
============================================================
Generated CASM:
test_multi_slot_store:
test_multi_slot_store:
test_multi_slot_store_0:
   0: 23 100 0 0           // [fp + 0, fp + 1] = u32(100)
   1: 23 200 0 2           // [fp + 2, fp + 3] = u32(200)
   2: 4 0 0 4              // Load: [fp + 4] = [fp + 0] + 0
   3: 4 1 0 5              // Load: [fp + 5] = [fp + 1] + 0
   4: 4 2 0 6              // Load: [fp + 6] = [fp + 2] + 0
   5: 4 3 0 7              // Load: [fp + 7] = [fp + 3] + 0
   6: 19 4 0 0 8           // LoadU32: [fp + 8, fp + 8 + 1] = [fp + 4, fp + 4 + 1] + 0
   7: 19 6 0 0 10          // LoadU32: [fp + 10, fp + 10 + 1] = [fp + 6, fp + 6 + 1] + 0
   8: 15 8 10 12           // u32([fp + 12], [fp + 13]) = u32([fp + 8], [fp + 9]) op u32([fp + 10], [fp + 11])
   9: 4 12 0 -4            // Return value 0 slot 0: [fp -4] = [fp + 12] + 0
  10: 4 13 0 -3            // Return value 0 slot 1: [fp -3] = [fp + 13] + 0
  11: 11 _ _ _             // return
