---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Type Casts - Casting from u32 to felt"
input_file: mdtest/01-basics/08-type-casts.md
---
Source:
fn test_u32_to_felt(input: u32) -> felt {
    let y: felt = input as felt;
    return y;
}
============================================================
Generated CASM:
test_u32_to_felt:
test_u32_to_felt:
test_u32_to_felt_0:
   0: 48 -4 32767 1        // [fp + 1] = [fp + -4] < 32767 // hi < 2^15 - 1
   1: 14 1 6 _             // if [fp + 1] != 0, jump to u32_cast_ok_0
   2: 48 -4 32768 2        // [fp + 2] = [fp + -4] < 32768 // hi < 2^15
   3: 1 2 1 3              // [fp + 3] = [fp + 2] - [fp + 1] // hi == 32767
   4: 48 -5 65535 4        // [fp + 4] = [fp + -5] < 65535 // lo < 2^16 - 1
   5: 2 3 4 5              // [fp + 5] = [fp + 3] * [fp + 4] // hi==32767 && lo<65535
   6: 50 5 1 _             // assert(hi == 32767 && lo < 65535)
u32_cast_ok_0:
   7: 6 -4 65536 6         // [fp + 6] = [fp + -4] * 65536 // hi * 2^16
   8: 0 -5 6 0             // [fp + 0] = [fp + -5] + [fp + 6] // Cast u32->felt
   9: 4 0 0 -3             // Return value 0: [fp -3] = [fp + 0] + 0
  10: 11 _ _ _             // return
