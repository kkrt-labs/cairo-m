---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Arrays in Cairo-M - Array as Function Parameter"
input_file: mdtest/01-basics/05-arrays.md
---
Source:
fn test_main() -> u32 {
    let arr: [u32; 3] = [1, 2, 3];
    return test_array(arr);
}

fn test_array(arr: [u32; 3]) -> u32 {
    return arr[0] + arr[1] + arr[2];
}
============================================================
Generated CASM:
test_main:
test_main:
test_main_0:
   0: 23 1 0 3             // [fp + 3], [fp + 4] = u32(1)
   1: 23 2 0 5             // [fp + 5], [fp + 6] = u32(2)
   2: 23 3 0 7             // [fp + 7], [fp + 8] = u32(3)
   3: 43 3 0 _             // [fp + 0] = fp + 3
   4: 4 0 0 9              // Arg 0 slot 0: [fp + 9] = [fp + 0] + 0
   5: 10 12 9 _            // call test_array
   6: 4 10 0 -4            // Return value 0 slot 0: [fp -4] = [fp + 10] + 0
   7: 4 11 0 -3            // Return value 0 slot 1: [fp -3] = [fp + 11] + 0
   8: 11 _ _ _             // return
test_array:
test_array:
test_array_0:
   9: 8 -5 0 0             // [fp + 0] = [[fp + -5] + 0] (load array element)
  10: 8 -5 1 1             // [fp + 1] = [[fp + -5] + 1] (load array element slot 1)
  11: 8 -5 2 2             // [fp + 2] = [[fp + -5] + 2] (load array element)
  12: 8 -5 3 3             // [fp + 3] = [[fp + -5] + 3] (load array element slot 1)
  13: 15 0 2 4             // u32([fp + 4], [fp + 5]) = u32([fp + 0], [fp + 1]) U32Add u32([fp + 2], [fp + 3])
  14: 8 -5 4 6             // [fp + 6] = [[fp + -5] + 4] (load array element)
  15: 8 -5 5 7             // [fp + 7] = [[fp + -5] + 5] (load array element slot 1)
  16: 15 4 6 8             // u32([fp + 8], [fp + 9]) = u32([fp + 4], [fp + 5]) U32Add u32([fp + 6], [fp + 7])
  17: 4 8 0 -4             // Return value 0 slot 0: [fp -4] = [fp + 8] + 0
  18: 4 9 0 -3             // Return value 0 slot 1: [fp -3] = [fp + 9] + 0
  19: 11 _ _ _             // return
