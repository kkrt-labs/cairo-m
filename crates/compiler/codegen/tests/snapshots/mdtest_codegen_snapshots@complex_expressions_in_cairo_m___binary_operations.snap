---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Complex Expressions in Cairo-M - Binary Operations"
input_file: mdtest/01-basics/06-expressions.md
---
Source:
fn test_binary_ops() -> felt {
    let a = 14;
    let b = 7;

    let add_result = a + b;        // 22
    let sub_result = a - b;        // 8
    let mul_result = a * b;        // 105
    let div_result = a / b;        // Field division

    return add_result + sub_result + mul_result + div_result;
}
============================================================
Generated CASM:
test_binary_ops:
test_binary_ops:
test_binary_ops_0:
   0: 9 14 0 _             // [fp + 0] = 14
   1: 9 7 1 _              // [fp + 1] = 7
   2: 0 0 1 2              // [fp + 2] = [fp + 0] op [fp + 1]
   3: 1 0 1 3              // [fp + 3] = [fp + 0] op [fp + 1]
   4: 2 0 1 4              // [fp + 4] = [fp + 0] op [fp + 1]
   5: 3 0 1 5              // [fp + 5] = [fp + 0] op [fp + 1]
   6: 0 2 3 6              // [fp + 6] = [fp + 2] op [fp + 3]
   7: 0 6 4 7              // [fp + 7] = [fp + 6] op [fp + 4]
   8: 0 7 5 -3             // [fp + -3] = [fp + 7] op [fp + 5]
   9: 11 _ _ _             // return
