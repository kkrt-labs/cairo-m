---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Recursion in Cairo-M - Fibonacci Sequence"
input_file: mdtest/04-advanced/01-recursion.md
---
Source:
fn test_fibonacci() -> felt {
    return fibonacci(7);  // Returns 13
}

fn fibonacci(n: felt) -> felt {
    if n == 0 {
        return 0;
    } else if n == 1 {
        return 1;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

============================================================
Generated CASM:
test_fibonacci:
test_fibonacci:
test_fibonacci_0:
   0: 9 7 1 _              // Arg 0: [fp + 1] = 7
   1: 10 3 4 _             // call fibonacci
   2: 4 2 0 2147483644     // Return value 0: [fp -3] = [fp + 2] + 0
   3: 11 _ _ _             // return
fibonacci:
   4: 4 2147483643 0 0     // [fp + 0] = [fp + -4] + (-0) (-0 as M31 -> 0)
   5: 14 0 3 _             // if [fp + 0] != 0 jmp rel not_zero_0
   6: 9 1 0 _              // [fp + 0] = 1
   7: 13 2 _ _             // jump rel end_1
not_zero_0:
   8: 9 0 0 _              // [fp + 0] = 0
end_1:
   9: 14 0 2 _             // if [fp + 0] != 0 jmp rel fibonacci_1
  10: 13 3 _ _             // jump rel fibonacci_2
fibonacci_1:
  11: 9 0 2147483644 _     // Return value 0: [fp -3] = 0
  12: 11 _ _ _             // return
fibonacci_2:
  13: 4 2147483643 2147483646 1 // [fp + 1] = [fp + -4] + (-1) (-1 as M31 -> 2147483646 (=-1 mod M31))
  14: 14 1 3 _             // if [fp + 1] != 0 jmp rel not_zero_2
  15: 9 1 1 _              // [fp + 1] = 1
  16: 13 2 _ _             // jump rel end_3
not_zero_2:
  17: 9 0 1 _              // [fp + 1] = 0
end_3:
  18: 14 1 2 _             // if [fp + 1] != 0 jmp rel fibonacci_3
  19: 13 3 _ _             // jump rel fibonacci_4
fibonacci_3:
  20: 9 1 2147483644 _     // Return value 0: [fp -3] = 1
  21: 11 _ _ _             // return
fibonacci_4:
  22: 4 2147483643 2147483646 7 // [fp + 7] = [fp + -4] + (-1) (-1 as M31 -> 2147483646 (=-1 mod M31))
  23: 10 9 4 _             // call fibonacci
  24: 4 2147483643 2147483645 10 // [fp + 10] = [fp + -4] + (-2) (-2 as M31 -> 2147483645 (=-2 mod M31))
  25: 10 12 4 _            // call fibonacci
  26: 0 8 11 2147483644    // [fp + -3] = [fp + 8] op [fp + 11]
  27: 11 _ _ _             // return
