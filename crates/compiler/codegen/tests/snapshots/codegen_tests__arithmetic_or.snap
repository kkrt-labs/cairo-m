---
source: crates/compiler/codegen/tests/codegen_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/codegen/tests/codegen_tests.rs
expression: codegen_output
---
Fixture: or.cm
============================================================
Source code:
func simple_or() -> felt {
    let x = 10;
    let y = 20;
    let z = x || y;
    return z;
}

============================================================
Generated CASM:
simple_or:
simple_or:
simple_or_0:
   0: 6 10 _ 0             // Store immediate: [fp + 0] = 10
   1: 6 20 _ 1             // Store immediate: [fp + 1] = 20
   2: 6 0 _ 2              // Initialize OR result to 0
   3: 15 0 3 _             // if [fp + 0] != 0, jump to or_true_0
   4: 15 1 2 _             // if [fp + 1] != 0, jump to or_true_0
   5: 13 7 _ _             // jump to or_end_1
or_true_0:
   6: 6 1 _ 2              // [fp + 2] = 1
or_end_1:
   7: 6 0 _ 3              // Initialize OR result to 0
   8: 15 0 3 _             // if [fp + 0] != 0, jump to or_true_2
   9: 15 1 2 _             // if [fp + 1] != 0, jump to or_true_2
  10: 13 12 _ _            // jump to or_end_3
or_true_2:
  11: 6 1 _ 3              // [fp + 3] = 1
or_end_3:
  12: 4 3 _ 4              // Store: [fp + 4] = [fp + 3]
  13: 4 4 _ -3             // Return value 0: [fp -3] = [fp + 4]
  14: 12 _ _ _             // return
