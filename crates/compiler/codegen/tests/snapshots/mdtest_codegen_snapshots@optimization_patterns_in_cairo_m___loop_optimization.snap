---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Optimization Patterns in Cairo-M - Loop Optimization"
input_file: mdtest/04-advanced/04-optimization.md
---
Source:
fn test_loop_optimization() -> felt {
    let i = 0;
    let sum = 0;
    while i != 5 {
        sum = sum + i;  // Accumulator pattern
        i = i + 1;      // Simple increment
    }
    return sum;
}
============================================================
Generated CASM:
test_loop_optimization:
test_loop_optimization:
test_loop_optimization_0:
   0: 9 0 0 _              // [fp + 0] = 0
   1: 9 0 1 _              // [fp + 1] = 0
   2: 4 1 0 2              // [fp + 2] = [fp + 1] + 0
   3: 4 0 0 3              // [fp + 3] = [fp + 0] + 0
test_loop_optimization_1:
   4: 4 3 2147483642 4     // [fp + 4] = [fp + 3] + (-5) (-5 as M31 -> 2147483642 (=-5 mod M31))
   5: 14 4 3 _             // if [fp + 4] != 0 jmp rel neq_non_zero_0
   6: 9 0 4 _              // [fp + 4] = 0
   7: 13 2 _ _             // jump rel neq_end_1
neq_non_zero_0:
   8: 9 1 4 _              // [fp + 4] = 1
neq_end_1:
   9: 14 4 2 _             // if [fp + 4] != 0 jmp rel test_loop_optimization_2
  10: 13 6 _ _             // jump rel test_loop_optimization_3
test_loop_optimization_2:
  11: 0 2 3 5              // [fp + 5] = [fp + 2] op [fp + 3]
  12: 4 3 1 6              // [fp + 6] = [fp + 3] + 1
  13: 4 5 0 2              // [fp + 2] = [fp + 5] + 0
  14: 4 6 0 3              // [fp + 3] = [fp + 6] + 0
  15: 13 2147483636 _ _    // jump rel test_loop_optimization_1
test_loop_optimization_3:
  16: 4 2 0 2147483644     // Return value 0: [fp -3] = [fp + 2] + 0
  17: 11 _ _ _             // return
