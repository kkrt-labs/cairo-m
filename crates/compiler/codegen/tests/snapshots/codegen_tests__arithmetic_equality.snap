---
source: crates/compiler/codegen/tests/codegen_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/codegen/tests/codegen_tests.rs
expression: codegen_output
---
Fixture: equality.cm
============================================================
Source code:
fn main() -> felt {
    let a = 1;
    let b = 0;
    let c = a == b;
    let d = a == 0;
    return c + d;
}

============================================================
Generated CASM:
main:
   0: 5 1 _ 0              // Store immediate: [fp + 0] = 1
   1: 5 0 _ 1              // Store immediate: [fp + 1] = 0
   2: 2 0 1 2              // [fp + 2] = [fp + 0] op [fp + 1]
   3: 14 2 3 _             // if [fp + 2] != 0, jump to not_zero_0
   4: 5 1 _ 2              // [fp + 2] = 1
   5: 12 7 _ _             // jump to end_1
not_zero_0:
   6: 5 0 _ 2              // [fp + 2] = 0
end_1:
   7: 3 0 0 3              // [fp + 3] = [fp + 0] op 0
   8: 14 3 3 _             // if [fp + 3] != 0, jump to not_zero_2
   9: 5 1 _ 3              // [fp + 3] = 1
  10: 12 12 _ _            // jump to end_3
not_zero_2:
  11: 5 0 _ 3              // [fp + 3] = 0
end_3:
  12: 0 2 3 -3             // [fp + -3] = [fp + 2] op [fp + 3]
  13: 11 _ _ _             // return
