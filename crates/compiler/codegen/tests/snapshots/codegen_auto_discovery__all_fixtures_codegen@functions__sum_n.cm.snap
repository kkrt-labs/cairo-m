---
source: crates/compiler/codegen/tests/codegen_auto_discovery.rs
description: Codegen snapshot for functions/sum_n.cm
input_file: test_data/functions/sum_n.cm
---
Fixture: functions/sum_n.cm
============================================================
Source code:
fn main() -> felt {
    let n = 10;
    let result = sum_n(n);
    return result;
}

fn sum_n(n: felt) -> felt {
    if (n == 0) {
        return 0;
    }
    return n + sum_n(n - 1);
}

============================================================
Generated CASM:
main:
   0: 9 10 2 _             // [fp + 2] = 10
   1: 10 4 4 _             // call sum_n
   2: 4 3 0 -3             // Return value 0: [fp -3] = [fp + 3] + 0
   3: 11 _ _ _             // return
sum_n:
sum_n:
sum_n_0:
   4: 14 -4 4 _            // if [fp + -4] != 0 jmp rel sum_n_2
   5: 12 6 _ _             // jump abs sum_n_1
sum_n_1:
   6: 9 0 -3 _             // Return value 0: [fp -3] = 0
   7: 11 _ _ _             // return
sum_n_2:
   8: 5 -4 1 3             // [fp + 3] = [fp + -4] op 1
   9: 10 5 4 _             // call sum_n
  10: 0 -4 4 -3            // [fp + -3] = [fp + -4] op [fp + 4]
  11: 11 _ _ _             // return
