---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Complex Expressions in Cairo-M - Expression Evaluation Order"
input_file: mdtest/01-basics/06-expressions.md
---
Source:
fn test_evaluation_order() -> felt {
    let a = 2;
    let b = 3;
    let c = 4;
    let d = 5;

    // Test associativity: left-to-right for same precedence
    let left_assoc = a + b + c + d;               // ((2 + 3) + 4) + 5 = 14
    let mult_assoc = a * b * c;                   // (2 * 3) * 4 = 24

    // Mixed precedence evaluation
    let mixed = a + b * c + d;                    // 2 + (3 * 4) + 5 = 2 + 12 + 5 = 19
    let complex_mixed = a * b + c * d;            // (2 * 3) + (4 * 5) = 6 + 20 = 26

    return left_assoc + mult_assoc + mixed + complex_mixed; // 14 + 24 + 19 + 26 = 83
}
============================================================
Generated CASM:
test_evaluation_order:
test_evaluation_order:
test_evaluation_order_0:
   0: 9 2 0 _              // [fp + 0] = 2
   1: 9 3 1 _              // [fp + 1] = 3
   2: 9 4 2 _              // [fp + 2] = 4
   3: 9 5 3 _              // [fp + 3] = 5
   4: 0 0 1 4              // [fp + 4] = [fp + 0] op [fp + 1]
   5: 0 4 2 5              // [fp + 5] = [fp + 4] op [fp + 2]
   6: 0 5 3 6              // [fp + 6] = [fp + 5] op [fp + 3]
   7: 2 0 1 7              // [fp + 7] = [fp + 0] op [fp + 1]
   8: 2 7 2 8              // [fp + 8] = [fp + 7] op [fp + 2]
   9: 2 1 2 9              // [fp + 9] = [fp + 1] op [fp + 2]
  10: 0 0 9 10             // [fp + 10] = [fp + 0] op [fp + 9]
  11: 0 10 3 11            // [fp + 11] = [fp + 10] op [fp + 3]
  12: 2 0 1 12             // [fp + 12] = [fp + 0] op [fp + 1]
  13: 2 2 3 13             // [fp + 13] = [fp + 2] op [fp + 3]
  14: 0 12 13 14           // [fp + 14] = [fp + 12] op [fp + 13]
  15: 0 6 8 15             // [fp + 15] = [fp + 6] op [fp + 8]
  16: 0 15 11 16           // [fp + 16] = [fp + 15] op [fp + 11]
  17: 0 16 14 -3           // [fp + -3] = [fp + 16] op [fp + 14]
  18: 11 _ _ _             // return
