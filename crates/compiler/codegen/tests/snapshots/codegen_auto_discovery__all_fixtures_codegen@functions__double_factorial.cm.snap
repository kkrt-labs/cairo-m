---
source: crates/compiler/codegen/tests/codegen_auto_discovery.rs
description: Codegen snapshot for functions/double_factorial.cm
input_file: test_data/functions/double_factorial.cm
---
Fixture: functions/double_factorial.cm
============================================================
Source code:
fn main() -> felt {
    let n = 9;
    let result = double_factorial(n);
    return result;
}

fn double_factorial(n: felt) -> felt {
    if (n == 0) {
        return 1;
    }
    if (n == 1) {
        return 1;
    }
    return n * double_factorial(n - 2);
}

============================================================
Generated CASM:
main:
   0: 9 9 2 _              // [fp + 2] = 9
   1: 10 4 4 _             // call double_factorial
   2: 4 3 0 -3             // Return value 0: [fp -3] = [fp + 3] + 0
   3: 11 _ _ _             // return
double_factorial:
double_factorial:
double_factorial_0:
   4: 14 -4 4 _            // if [fp + -4] != 0 jmp rel double_factorial_2
   5: 12 6 _ _             // jump abs double_factorial_1
double_factorial_1:
   6: 9 1 -3 _             // Return value 0: [fp -3] = 1
   7: 11 _ _ _             // return
double_factorial_2:
   8: 5 -4 1 3             // [fp + 3] = [fp + -4] op 1
   9: 14 3 3 _             // if [fp + 3] != 0 jmp rel double_factorial_4
double_factorial_3:
  10: 9 1 -3 _             // Return value 0: [fp -3] = 1
  11: 11 _ _ _             // return
double_factorial_4:
  12: 5 -4 2 4             // [fp + 4] = [fp + -4] op 2
  13: 10 6 4 _             // call double_factorial
  14: 2 -4 5 -3            // [fp + -3] = [fp + -4] op [fp + 5]
  15: 11 _ _ _             // return
