---
source: crates/compiler/codegen/tests/codegen_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/codegen/tests/codegen_tests.rs
expression: codegen_output
---
Fixture: and.cm
============================================================
Source code:
func simple_and() -> felt {
    let x = 10;
    let y = 20;
    let z = x && y;
    return z;
}

============================================================
Generated CASM:
simple_and:
simple_and:
simple_and_0:
   0: 6 10 _ 0             // Store immediate: [fp + 0] = 10
   1: 6 20 _ 1             // Store immediate: [fp + 1] = 20
   2: 7 0 1 3              // [fp + 3] = [fp + 0] op [fp + 1]
   3: 31 3 3 _             // if temp != 0, jump to set result to 1
   4: 6 0 _ 2              // Set AND result to 0
   5: 20 7 _ _             // jump to end
and_non_zero_0:
   6: 6 1 _ 2              // Set AND result to 1
and_end_1:
   7: 4 2 _ 4              // Store: [fp + 4] = [fp + 2]
   8: 4 4 _ -3             // Return value: [fp - 3] = [fp + 4]
   9: 15 _ _ _             // return
