---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Loops in Cairo-M - Nested Loops"
input_file: mdtest/02-control-flow/02-loops.md
---
Source:
fn multiply_table() -> felt {
    let result = 0;
    for (let i = 1; i != 10; i = i + 1) {
        for (let j = 1; j != 10; j = j + 1) {
            result = result + (i * j);
        }
    }
    return result;
}
============================================================
Generated CASM:
multiply_table:
multiply_table:
multiply_table_0:
   0: 9 0 0 _              // [fp + 0] = 0
   1: 9 1 1 _              // [fp + 1] = 1
multiply_table_1:
   2: 5 1 10 7             // [fp + 7] = [fp + 1] op 10
   3: 14 7 2 _             // if [fp + 7] != 0 jmp rel multiply_table_2
   4: 12 10 _ _            // jump abs multiply_table_4
multiply_table_2:
   5: 9 1 2 _              // [fp + 2] = 1
   6: 12 12 _ _            // jump abs multiply_table_5
multiply_table_3:
   7: 4 1 0 9              // [fp + 9] = [fp + 1] + 0
   8: 4 9 1 1              // [fp + 1] = [fp + 9] op 1
   9: 12 2 _ _             // jump abs multiply_table_1
multiply_table_4:
  10: 4 0 0 -3             // Return value 0: [fp -3] = [fp + 0] + 0
  11: 11 _ _ _             // return
multiply_table_5:
  12: 5 2 10 8             // [fp + 8] = [fp + 2] op 10
  13: 14 8 2 _             // if [fp + 8] != 0 jmp rel multiply_table_6
  14: 12 21 _ _            // jump abs multiply_table_8
multiply_table_6:
  15: 2 1 2 4              // [fp + 4] = [fp + 1] op [fp + 2]
  16: 4 0 0 9              // [fp + 9] = [fp + 0] + 0
  17: 0 9 4 0              // [fp + 0] = [fp + 9] op [fp + 4]
multiply_table_7:
  18: 4 2 0 9              // [fp + 9] = [fp + 2] + 0
  19: 4 9 1 2              // [fp + 2] = [fp + 9] op 1
  20: 12 12 _ _            // jump abs multiply_table_5
multiply_table_8:
  21: 12 7 _ _             // jump abs multiply_table_3
