---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Recursion in Cairo-M - Simple Recursion"
input_file: mdtest/04-advanced/01-recursion.md
---
Source:
fn test_factorial() -> felt {
    return factorial(5);  // Returns 120
}

fn factorial(n: felt) -> felt {
    if n == 0 {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

============================================================
Generated CASM:
test_factorial:
test_factorial:
test_factorial_0:
   0: 9 5 1 _              // Arg 0: [fp + 1] = 5
   1: 10 3 4 _             // call factorial
   2: 4 2 0 2147483644     // Return value 0: [fp -3] = [fp + 2] + 0
   3: 11 _ _ _             // return
factorial:
   4: 4 2147483643 0 0     // [fp + 0] = [fp + -4] + (-0) (-0 as M31 -> 0)
   5: 14 0 3 _             // if [fp + 0] != 0 jmp rel not_zero_0
   6: 9 1 0 _              // [fp + 0] = 1
   7: 12 9 _ _             // jump abs end_1
not_zero_0:
   8: 9 0 0 _              // [fp + 0] = 0
end_1:
   9: 14 0 2 _             // if [fp + 0] != 0 jmp rel factorial_1
  10: 12 13 _ _            // jump abs factorial_2
factorial_1:
  11: 9 1 2147483644 _     // Return value 0: [fp -3] = 1
  12: 11 _ _ _             // return
factorial_2:
  13: 4 2147483643 2147483646 4 // [fp + 4] = [fp + -4] + (-1) (-1 as M31 -> 2147483646 (=-1 mod M31))
  14: 10 6 4 _             // call factorial
  15: 2 2147483643 5 2147483644 // [fp + -3] = [fp + -4] op [fp + 5]
  16: 11 _ _ _             // return
