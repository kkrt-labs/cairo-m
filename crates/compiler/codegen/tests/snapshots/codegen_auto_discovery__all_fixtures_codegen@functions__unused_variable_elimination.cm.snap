---
source: crates/compiler/codegen/tests/codegen_auto_discovery.rs
description: Codegen snapshot for functions/unused_variable_elimination.cm
input_file: test_data/functions/unused_variable_elimination.cm
---
Fixture: functions/unused_variable_elimination.cm
============================================================
Source code:
//!ASSERT FUNCTION_COUNT: 1
//!ASSERT NOT_CONTAINS: %5 = stackalloc
//!ASSERT NOT_CONTAINS: store %5

// Test that unused variables don't generate allocations
fn test_unused(a: felt, b: felt) -> felt {
    let c = a + b;  // Used - should allocate
    let d = a * b;  // Unused - should NOT allocate
    let e = a == b; // Unused - should NOT allocate
    return c;
}

============================================================
Result: SEMANTIC ERRORS
Semantic errors found:
DiagnosticCollection {
    diagnostics: [
        Diagnostic {
            severity: Warning,
            code: UnusedVariable,
            message: "Unused variable 'd'",
            file_path: "functions/unused_variable_elimination.cm",
            span: 256..257,
            related_spans: [],
        },
        Diagnostic {
            severity: Warning,
            code: UnusedVariable,
            message: "Unused variable 'e'",
            file_path: "functions/unused_variable_elimination.cm",
            span: 308..309,
            related_spans: [],
        },
    ],
}
