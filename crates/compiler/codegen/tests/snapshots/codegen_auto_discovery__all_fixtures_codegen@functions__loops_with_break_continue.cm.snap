---
source: crates/compiler/codegen/tests/codegen_auto_discovery.rs
description: Codegen snapshot for functions/loops_with_break_continue.cm
input_file: test_data/functions/loops_with_break_continue.cm
---
Fixture: functions/loops_with_break_continue.cm
============================================================
Source code:
fn loops_with_break_continue() -> felt {
    let counter = 0;
    let i = 0;
    loop {
        counter = counter + 1;
        if (counter == 5) {
            continue;
        }
        let counter2 = 0;
        loop {
            if (counter2 == 10) {
                break;
            }
            counter2 = counter2 + 1;
            i = i + 2;
        }
        i = i + 1;
        if (counter == 10) {
            break;
        }
    }
    return i;
}

============================================================
Generated CASM:
loops_with_break_continue:
loops_with_break_continue:
loops_with_break_continue_0:
   0: 9 0 0 _              // [fp + 0] = 0
   1: 9 0 1 _              // [fp + 1] = 0
loops_with_break_continue_1:
   2: 4 0 0 10             // [fp + 10] = [fp + 0] + 0
   3: 4 10 1 0             // [fp + 0] = [fp + 10] op 1
   4: 5 0 5 7              // [fp + 7] = [fp + 0] op 5
   5: 14 7 5 _             // if [fp + 7] != 0 jmp rel loops_with_break_continue_4
   6: 12 9 _ _             // jump abs loops_with_break_continue_3
loops_with_break_continue_2:
   7: 4 1 0 -3             // Return value 0: [fp -3] = [fp + 1] + 0
   8: 11 _ _ _             // return
loops_with_break_continue_3:
   9: 12 2 _ _             // jump abs loops_with_break_continue_1
loops_with_break_continue_4:
  10: 9 0 3 _              // [fp + 3] = 0
loops_with_break_continue_5:
  11: 5 3 10 8             // [fp + 8] = [fp + 3] op 10
  12: 14 8 8 _             // if [fp + 8] != 0 jmp rel loops_with_break_continue_8
  13: 12 19 _ _            // jump abs loops_with_break_continue_7
loops_with_break_continue_6:
  14: 4 1 0 10             // [fp + 10] = [fp + 1] + 0
  15: 4 10 1 1             // [fp + 1] = [fp + 10] op 1
  16: 5 0 10 9             // [fp + 9] = [fp + 0] op 10
  17: 14 9 9 _             // if [fp + 9] != 0 jmp rel loops_with_break_continue_10
  18: 12 25 _ _            // jump abs loops_with_break_continue_9
loops_with_break_continue_7:
  19: 12 14 _ _            // jump abs loops_with_break_continue_6
loops_with_break_continue_8:
  20: 4 3 0 10             // [fp + 10] = [fp + 3] + 0
  21: 4 10 1 3             // [fp + 3] = [fp + 10] op 1
  22: 4 1 0 10             // [fp + 10] = [fp + 1] + 0
  23: 4 10 2 1             // [fp + 1] = [fp + 10] op 2
  24: 12 11 _ _            // jump abs loops_with_break_continue_5
loops_with_break_continue_9:
  25: 12 7 _ _             // jump abs loops_with_break_continue_2
loops_with_break_continue_10:
  26: 12 2 _ _             // jump abs loops_with_break_continue_1
