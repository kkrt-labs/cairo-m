---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Complex Expressions in Cairo-M - Unary Operations - Logical Not"
input_file: mdtest/01-basics/06-expressions.md
---
Source:
fn test_logical_not() -> bool {
    let x = true;
    let not_x = !x;           // false
    let double_not = !!x;     // true
    let not_zero = !false;        // true
    return not_zero && double_not;
}
============================================================
Generated CASM:
test_logical_not:
test_logical_not:
test_logical_not_0:
   0: 9 1 0 _              // [fp + 0] = true
   1: 14 0 3 _             // if [fp + 0] != 0, jump to not_zero_0
   2: 9 1 1 _              // [fp + 1] = 1
   3: 12 5 _ _             // jump to not_end_1
not_zero_0:
   4: 9 0 1 _              // [fp + 1] = 0
not_end_1:
   5: 14 1 3 _             // if [fp + 1] != 0, jump to not_zero_2
   6: 9 1 2 _              // [fp + 2] = 1
   7: 12 9 _ _             // jump to not_end_3
not_zero_2:
   8: 9 0 2 _              // [fp + 2] = 0
not_end_3:
   9: 9 1 3 _              // [fp + 3] = true
  10: 2 3 2 -3             // [fp + -3] = [fp + 3] op [fp + 2]
  11: 14 -3 3 _            // if [fp + -3] != 0, jump to and_non_zero_6
  12: 9 0 -3 _             // [fp + -3] = 0
  13: 12 15 _ _            // jump to and_end_7
and_non_zero_6:
  14: 9 1 -3 _             // [fp + -3] = 1
and_end_7:
  15: 11 _ _ _             // return
