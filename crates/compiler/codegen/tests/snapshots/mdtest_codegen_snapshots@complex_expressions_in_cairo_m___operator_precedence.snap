---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Complex Expressions in Cairo-M - Operator Precedence"
input_file: mdtest/01-basics/06-expressions.md
---
Source:
fn test_precedence() -> felt {
    let a = 5;
    let b = 3;
    let c = 2;

    // Multiplication happens before addition: 5 + (3 * 2) = 11
    let result1 = a + b * c;

    // Parentheses override precedence: (5 + 3) * 2 = 16
    let result2 = (a + b) * c;

    // Complex precedence: 5 * 3 + 2 * 4 = 23
    let result3 = a * b + c * 4;

    return result1 + result2 + result3;  // 11 + 16 + 23 = 50
}
============================================================
Generated CASM:
test_precedence:
test_precedence:
test_precedence_0:
   0: 9 5 0 _              // [fp + 0] = 5
   1: 9 3 1 _              // [fp + 1] = 3
   2: 9 2 2 _              // [fp + 2] = 2
   3: 2 1 2 3              // [fp + 3] = [fp + 1] op [fp + 2]
   4: 0 0 3 4              // [fp + 4] = [fp + 0] op [fp + 3]
   5: 0 0 1 5              // [fp + 5] = [fp + 0] op [fp + 1]
   6: 2 5 2 6              // [fp + 6] = [fp + 5] op [fp + 2]
   7: 2 0 1 7              // [fp + 7] = [fp + 0] op [fp + 1]
   8: 6 2 4 8              // [fp + 8] = [fp + 2] op 4
   9: 0 7 8 9              // [fp + 9] = [fp + 7] op [fp + 8]
  10: 0 4 6 10             // [fp + 10] = [fp + 4] op [fp + 6]
  11: 0 10 9 -3            // [fp + -3] = [fp + 10] op [fp + 9]
  12: 11 _ _ _             // return
