---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Structs in Cairo-M - Struct Field Access 2"
input_file: mdtest/03-types/02-structs.md
---
Source:
struct RectangleU32 {
    width: u32,
    height: u32,
}

fn calculate_area_u32() -> u32 {
    let rect = RectangleU32 { width: 5, height: 10 };
    if rect.width == 5 {
        rect.width = rect.width * 2;
    } else {
        rect.width = rect.height;
    }
    return rect.width * rect.height;
}
============================================================
Generated CASM:
calculate_area_u32:
calculate_area_u32:
calculate_area_u32_0:
   0: 23 5 0 0             // [fp + 0, fp + 1] = u32(5)
   1: 23 10 0 2            // [fp + 2, fp + 3] = u32(10)
   2: 19 0 0 0 4           // LoadU32: [fp + 4, fp + 4 + 1] = [fp + 0, fp + 0 + 1] + 0
   3: 20 4 5 0 18          // u32([fp + 18], [fp + 19]) = u32([fp + 4], [fp + 5]) op u32(5, 0)
   4: 5 4 5 18             // [fp + 18] = [fp + 4] op 5
   5: 14 18 8 _            // if [fp + 18] != 0 jmp rel calculate_area_u32_2
calculate_area_u32_1:
   6: 19 0 0 0 6           // LoadU32: [fp + 6, fp + 6 + 1] = [fp + 0, fp + 0 + 1] + 0
   7: 21 6 2 0 8           // u32([fp + 8], [fp + 9]) = u32([fp + 6], [fp + 7]) op u32(2, 0)
   8: 19 8 0 0 0           // [fp + 0], [fp + 0 + 1] = [fp + 8], [fp + 8  +1] + 0
   9: 12 19 _ _            // jump abs calculate_area_u32_3
calculate_area_u32_2:
  10: 19 2 0 0 10          // LoadU32: [fp + 10, fp + 10 + 1] = [fp + 2, fp + 2 + 1] + 0
  11: 19 10 0 0 0          // [fp + 0], [fp + 0 + 1] = [fp + 10], [fp + 10  +1] + 0
calculate_area_u32_3:
  12: 19 0 0 0 12          // LoadU32: [fp + 12, fp + 12 + 1] = [fp + 0, fp + 0 + 1] + 0
  13: 19 2 0 0 14          // LoadU32: [fp + 14, fp + 14 + 1] = [fp + 2, fp + 2 + 1] + 0
  14: 17 12 14 16          // u32([fp + 16], [fp + 17]) = u32([fp + 12], [fp + 13]) op u32([fp + 14], [fp + 15])
  15: 4 16 0 -4            // Return value 0 slot 0: [fp -4] = [fp + 16] + 0
  16: 4 17 0 -3            // Return value 0 slot 1: [fp -3] = [fp + 17] + 0
  17: 11 _ _ _             // return
