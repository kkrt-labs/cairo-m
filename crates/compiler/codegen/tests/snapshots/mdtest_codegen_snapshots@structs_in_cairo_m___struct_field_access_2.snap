---
source: crates/compiler/codegen/tests/mdtest_snapshots.rs
description: "Codegen snapshot for mdtest: Structs in Cairo-M - Struct Field Access 2"
input_file: mdtest/03-types/02-structs.md
---
Source:
struct RectangleU32 {
    width: u32,
    height: u32,
}

fn calculate_area_u32() -> u32 {
    let rect = RectangleU32 { width: 5, height: 10 };
    rect.width = 7;
    if rect.width == 5 {
        rect.width = rect.width * 3;
    } else {
        rect.width = rect.height;
    }
    return rect.width * rect.height;
}
============================================================
Generated CASM:
calculate_area_u32:
calculate_area_u32:
calculate_area_u32_0:
   0: 23 5 0 0             // [fp + 0], [fp + 1] = u32(5)
   1: 23 10 0 2            // [fp + 2], [fp + 3] = u32(10)
   2: 23 7 0 0             // [fp + 0], [fp + 1] = u32(7)
   3: 30 0 5 0 10          // [fp + 10] = u32([fp + 0], [fp + 1]) U32Eq u32(5, 0) /* imm = 0x00000005 */
   4: 14 10 2 _            // if [fp + 10] != 0 jmp rel calculate_area_u32_1
   5: 12 16 _ _            // jump abs calculate_area_u32_2
calculate_area_u32_1:
   6: 21 0 3 0 13          // u32([fp + 13], [fp + 14]) = u32([fp + 0], [fp + 1]) U32Mul u32(3, 0) /* imm = 0x00000003 */
   7: 4 13 0 0             // [fp + 0] = [fp + 13] + 0
   8: 4 14 0 1             // [fp + 1] = [fp + 14] + 0
   9: 4 0 0 19             //  slot 0: [fp + 19] = [fp + 0] + 0
  10: 4 1 0 20             //  slot 1: [fp + 20] = [fp + 1] + 0
  11: 4 2 0 21             //  slot 2: [fp + 21] = [fp + 2] + 0
  12: 4 3 0 22             //  slot 3: [fp + 22] = [fp + 3] + 0
  13: 12 22 _ _            // jump abs calculate_area_u32_3
calculate_area_u32_2:
  14: 4 2 0 0              // [fp + 0] = [fp + 2] + 0
  15: 4 3 0 1              // [fp + 1] = [fp + 3] + 0
  16: 4 0 0 19             //  slot 0: [fp + 19] = [fp + 0] + 0
  17: 4 1 0 20             //  slot 1: [fp + 20] = [fp + 1] + 0
  18: 4 2 0 21             //  slot 2: [fp + 21] = [fp + 2] + 0
  19: 4 3 0 22             //  slot 3: [fp + 22] = [fp + 3] + 0
calculate_area_u32_3:
  20: 17 19 21 33          // u32([fp + 33], [fp + 34]) = u32([fp + 19], [fp + 20]) U32Mul u32([fp + 21], [fp + 22])
  21: 4 33 0 2147483643    // Return value 0 slot 0: [fp -4] = [fp + 33] + 0
  22: 4 34 0 2147483644    // Return value 0 slot 1: [fp -3] = [fp + 34] + 0
  23: 11 _ _ _             // return
