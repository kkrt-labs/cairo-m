---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
description: "MIR snapshot for mdtest: Arrays in Cairo-M - Array in Structs and Tuples"
input_file: mdtest/01-basics/05-arrays.md
---
Source:
struct Result {
    values: [felt; 2],
    sum: felt,
}

fn compute_result(a: felt, b: felt) -> felt {
    let tuple_ : (felt, [felt; 2]) = (a, [a, b]);
    let struct_ : Result = Result {
        values: [a, b],
        sum: a + b,
    };
    return tuple_.1[0] + struct_.values[1];
}
============================================================
Generated MIR:
module {
  // Function 0
  fn compute_result {
    parameters: [0, 1]
    entry: 0

    0:
      %2 = makefixedarray [%0, %1]
      %3 = maketuple %0, %2
      %4 = makefixedarray [%0, %1]
      %5 = %0 + %1
      %6 = makestruct { values: %4, sum: %5 }
      %7 = extracttuple %3, 1
      %8 = load %7[0]
      %9 = extractfield %6, "values"
      %10 = load %9[1]
      %11 = %8 + %10
      return %11

  }

}
