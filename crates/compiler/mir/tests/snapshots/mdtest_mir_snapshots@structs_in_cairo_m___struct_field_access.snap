---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
description: "MIR snapshot for mdtest: Structs in Cairo-M - Struct Field Access"
input_file: mdtest/03-types/02-structs.md
---
Source:
struct Rectangle {
    width: felt,
    height: felt,
}

fn calculate_area() -> felt {
    let rect = Rectangle { width: 5, height: 10 };
    rect.width = 7;
    return rect.width * rect.height;  // Returns 70
}
============================================================
Generated MIR:
module {
  // Function 0
  fn calculate_area {
    entry: 0

    0:
      // Lowered struct alloca for %0
%6 = framealloc Rectangle
      // Get address of field 'width'
%7 = getelementptr %6, 0
      // Store field 'width'
store %7, 5
      // Get address of field 'height'
%8 = getelementptr %6, 1
      // Store field 'height'
store %8, 10
      // Alias struct value to alloca
%0 = %6 (*Rectangle)
      // Get address of field 'width'
%1 = getelementptr %0, 0
      store %1, 7
      // Folded ExtractStructField(0, "width")
%2 = 5
      // Folded ExtractStructField(0, "height")
%3 = 10
      %4 = %2 Mul %3
      return %4

  }

}
