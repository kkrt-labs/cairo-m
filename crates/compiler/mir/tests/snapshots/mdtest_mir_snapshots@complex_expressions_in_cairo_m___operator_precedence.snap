---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
description: "MIR snapshot for mdtest: Complex Expressions in Cairo-M - Operator Precedence"
input_file: mdtest/01-basics/06-expressions.md
---
Source:
fn test_precedence() -> felt {
    let a = 5;
    let b = 3;
    let c = 2;

    // Multiplication happens before addition: 5 + (3 * 2) = 11
    let result1 = a + b * c;

    // Parentheses override precedence: (5 + 3) * 2 = 16
    let result2 = (a + b) * c;

    // Complex precedence: 5 * 3 + 2 * 4 = 23
    let result3 = a * b + c * 4;

    return result1 + result2 + result3;  // 11 + 16 + 23 = 50
}
============================================================
Generated MIR:
module {
  // Function 0
  fn test_precedence {
    entry: 0

    0:
      %0 = 5
      %1 = 3
      %2 = 2
      %3 = %1 Mul %2
      %4 = %0 Add %3
      %5 = %0 Add %1
      %6 = %5 Mul %2
      %7 = %0 Mul %1
      %8 = %2 Mul 4
      %9 = %7 Add %8
      %10 = %4 Add %6
      %11 = %10 Add %9
      return %11

  }

}
