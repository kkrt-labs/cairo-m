---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
description: "MIR snapshot for mdtest: Arrays in Cairo-M - Array as Function Parameter 2"
input_file: mdtest/01-basics/05-arrays.md
---
Source:
fn use_array_parameter() -> u32 {
    let my_array: [u32; 3] = [1, 2, 3];
    return process_array(my_array, 3felt);
}

fn process_array(arr: [u32; 3], size: felt) -> u32 {
    let sum: u32 = 0;
    let i = 0;
    loop {
        if i == size {
            break;
        }
        sum = sum + arr[i];
        arr[i] = 0;
        i = i + 1;
    }
    return sum;
}
============================================================
Generated MIR:
module {
  // Function 0
  fn use_array_parameter {
    entry: 0

    0:
      %0 = makefixedarray [1, 2, 3]
      %1 = call 1(%0, 3)
      return %1

  }

  // Function 1
  fn process_array {
    parameters: [0, 1]
    entry: 0

    0:
      %2 = 0 (u32)
      %3 = 0
      %4 = %3
      %7 = %2 (u32)
      jump 1

    1 (block_1):
      ; block_1
      %6 = %4 == %1
      if %6 then jump 3 else jump 4

    2 (block_2):
      ; block_2
      return %7

    3 (block_3):
      ; block_3
      jump 2

    4 (block_4):
      ; block_4
      %9 = load %0[%4]
      %10 = %7 U32Add %9
      %11 = load %0[%4]
      store 0 -> %0[%4]
      %12 = %4 + 1
      %4 = %12
      %7 = %10 (u32)
      jump 1

  }

}
