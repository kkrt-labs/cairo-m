---
source: crates/compiler/mir/tests/mir_generation_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/mir/tests/mir_generation_tests.rs
expression: mir_output
---
Fixture: fib_loop.cm
============================================================
Source code:
fn fibonacci_loop(n: felt) -> felt {
    let a = 0;
    let b = 1;
    let i = 0;
    while (i != n) {
        let temp = a + b;
        a = b;
        b = temp;
        i = i + 1;
    }
    return a;
}

fn main() -> felt {
    let n = 10;
    let result = fibonacci_loop(n);
    return result;
}

============================================================
Generated MIR:
module {
  // Function 0
  fn fibonacci_loop {
    parameters: [0]
    entry: 0

    0:
      %1 = 0
      %2 = 1
      %3 = 0
      jump 1

    1:
      if %3 Neq %0 then jump 2 else jump 3

    2:
      %5 = %1 Add %2
      store %1, %2
      store %2, %5
      %3 = %3 Add 1
      jump 1

    3:
      return %1

  }

  // Function 1
  fn main {
    entry: 0

    0:
      %0 = 10
      %1 = call 0(%0)
      return %1

  }

}
