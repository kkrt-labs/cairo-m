---
source: crates/compiler/mir/tests/mir_generation_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/mir/tests/mir_generation_tests.rs
expression: mir_output
---
Fixture: mutual_recursion.cm
============================================================
Source code:
fn main() -> felt {
    let n = 42;
    let even_result = is_even(n);
    let odd_result = is_odd(n);
    return even_result * 100 + odd_result;
}

fn is_even(n: felt) -> felt {
    if (n == 0) {
        return 1;
    }
    return is_odd(n - 1);
}

fn is_odd(n: felt) -> felt {
    if (n == 0) {
        return 0;
    }
    return is_even(n - 1);
}

============================================================
Generated MIR:
module {
  // Function 0
  fn main {
    entry: 0

    0:
      %0 = 42
      %1 = call 1(%0)
      %2 = call 2(%0)
      %3 = %1 Mul 100
      %4 = %3 Add %2
      return %4

  }

  // Function 1
  fn is_even {
    parameters: [0]
    entry: 0

    0:
      if %0 then jump 2 else jump 1

    1:
      return 1

    2:
      %2 = %0 Sub 1
      %3 = call 2(%2)
      return %3

  }

  // Function 2
  fn is_odd {
    parameters: [0]
    entry: 0

    0:
      if %0 then jump 2 else jump 1

    1:
      return 0

    2:
      %2 = %0 Sub 1
      %3 = call 1(%2)
      return %3

  }

}
