---
source: crates/compiler/mir/tests/mir_generation_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/mir/tests/mir_generation_tests.rs
expression: mir_output
---
Fixture: struct_access_mut.cm
============================================================
Source code:
//!ASSERT CONTAINS: getelementptr
//!ASSERT CONTAINS: store

// Tests writing a value to a struct field.
struct Point {
    x: felt,
    y: felt,
}

fn test() -> felt {
    let p = Point { x: 10, y: 20 };
    p.y = 30; // Should generate getelementptr followed by a store.
    return p.y;
}

============================================================
Generated MIR:
module {
  // Function 0
  fn test {
    entry: 0

    0:
      // Allocate struct
%0 = stackalloc 2
      // Get address of field 'x'
%1 = getelementptr %0, 0
      store %1, 10
      // Get address of field 'y'
%2 = getelementptr %0, 1
      store %2, 20
      // Get address of field 'y'
%3 = getelementptr %0, 1
      store %3, 30
      // Get address of field 'y'
%4 = getelementptr %0, 1
      %5 = load %4
      return %5

  }

}
