---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
description: "MIR snapshot for mdtest: Multiple Functions in Cairo-M - Mathematical Operations"
input_file: mdtest/04-advanced/02-multiple-functions.md
---
Source:
fn test_math_operations() -> felt {
    let x = 4;
    let y = 3;
    return compute_expression(x, y);
}

fn compute_expression(a: felt, b: felt) -> felt {
    let power_result = power(a, b);
    let factorial_result = factorial(b);
    return power_result + factorial_result;
}

fn power(base: felt, exp: felt) -> felt {
    if exp == 0 {
        return 1;
    }
    return base * power(base, exp - 1);
}

fn factorial(n: felt) -> felt {
    if n == 0 {
        return 1;
    }
    return n * factorial(n - 1);
}
============================================================
Generated MIR:
module {
  // Function 0
  fn test_math_operations {
    entry: 0

    0:
      %0 = 4
      %1 = 3
      %2 = call 1(%0, %1)
      return %2

  }

  // Function 1
  fn compute_expression {
    parameters: [0, 1]
    entry: 0

    0:
      %2 = call 2(%0, %1)
      %3 = call 3(%1)
      %4 = %2 Add %3
      return %4

  }

  // Function 2
  fn power {
    parameters: [0, 1]
    entry: 0

    0:
      if %1 then jump 2 else jump 1

    1:
      return 1

    2:
      %3 = %1 Sub 1
      %4 = call 2(%0, %3)
      %5 = %0 Mul %4
      return %5

  }

  // Function 3
  fn factorial {
    parameters: [0]
    entry: 0

    0:
      if %0 then jump 2 else jump 1

    1:
      return 1

    2:
      %2 = %0 Sub 1
      %3 = call 3(%2)
      %4 = %0 Mul %3
      return %4

  }

}
