---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
description: "MIR snapshot for mdtest: Tuples in Cairo-M - Tuple Member Access"
input_file: mdtest/03-types/01-tuples.md
---
Source:
fn access_tuple_member() -> felt {
    let my_tuple = (1, 2, 3);
    return my_tuple.0 + my_tuple.1 + my_tuple.2;
}
============================================================
Generated MIR:
module {
  // Function 0
  fn access_tuple_member {
    entry: 0

    0:
      // Allocate tuple with 3 elements
%0 = framealloc (felt, felt, felt)
      // Get address of tuple element 0
%1 = getelementptr %0, 0
      store %1, 1
      // Get address of tuple element 1
%2 = getelementptr %0, 1
      store %2, 2
      // Get address of tuple element 2
%3 = getelementptr %0, 2
      store %3, 3
      // Get address of tuple element 0
%4 = getelementptr %0, 0
      // Load tuple element 0
%5 = load felt %4
      // Get address of tuple element 1
%6 = getelementptr %0, 1
      // Load tuple element 1
%7 = load felt %6
      %8 = %5 Add %7
      // Get address of tuple element 2
%9 = getelementptr %0, 2
      // Load tuple element 2
%10 = load felt %9
      %11 = %8 Add %10
      return %11

  }

}
