---
source: crates/compiler/mir/tests/mir_auto_discovery.rs
description: MIR snapshot for functions/loops_with_break_continue.cm
input_file: test_data/functions/loops_with_break_continue.cm
---
Fixture: functions/loops_with_break_continue.cm
============================================================
Source code:
fn loops_with_break_continue() -> felt {
    let counter = 0;
    let i = 0;
    loop {
        counter = counter + 1;
        if (counter == 5) {
            continue;
        }
        let counter2 = 0;
        loop {
            if (counter2 == 10) {
                break;
            }
            counter2 = counter2 + 1;
            i = i + 2;
        }
        i = i + 1;
        if (counter == 10) {
            break;
        }
    }
    return i;
}

============================================================
Generated MIR:
module {
  // Function 0
  fn loops_with_break_continue {
    entry: 0

    0:
      %0 = 0
      %1 = 0
      jump 1

    1:
      %0 = %0 Add 1
      if %0 Eq 5 then jump 3 else jump 4

    2:
      return %1

    3:
      jump 1

    4:
      %4 = 0
      jump 5

    5:
      if %4 Eq 10 then jump 7 else jump 8

    6:
      %1 = %1 Add 1
      if %0 Eq 10 then jump 9 else jump 10

    7:
      jump 6

    8:
      %4 = %4 Add 1
      %1 = %1 Add 2
      jump 5

    9:
      jump 2

    10:
      jump 1

  }

}
