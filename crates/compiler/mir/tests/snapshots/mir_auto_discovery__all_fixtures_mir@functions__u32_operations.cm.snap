---
source: crates/compiler/mir/tests/mir_auto_discovery.rs
description: MIR snapshot for functions/u32_operations.cm
input_file: test_data/functions/u32_operations.cm
---
Fixture: functions/u32_operations.cm
============================================================
Source code:
fn add(a: u32, b: u32) -> u32 {
    // Simple u32 addition
    let result: u32 = a + b;
    let one: u32 = 1;
    let result2: u32 = result + one;
    return result2;
}

fn sub(a: u32, b: u32) -> u32 {
    // Simple u32 subtraction
    let result: u32 = a - b;
    let one: u32 = 1;
    let result2: u32 = result - one;
    return result2;
}

fn mul(a: u32, b: u32) -> u32 {
    // Simple u32 multiplication
    let result: u32 = a * b;
    let two: u32 = 2;
    let result2: u32 = result * two;
    return result2;
}

fn div(a: u32, b: u32) -> u32 {
    // Simple u32 division
    let result: u32 = a / b;
    let two: u32 = 2;
    let result2: u32 = result / two;
    return result2;
}

fn get_u32_literal() -> u32 {
    // Return a literal that should be inferred as u32
    return 42;
}

============================================================
Generated MIR:
module {
  // Function 0
  fn add {
    parameters: [0, 1]
    entry: 0

    0:
      %2 = %0 U32Add %1
      %3 = 1 (u32)
      %4 = %2 U32Add %3
      return %4

  }

  // Function 1
  fn sub {
    parameters: [0, 1]
    entry: 0

    0:
      %2 = %0 U32Sub %1
      %3 = 1 (u32)
      %4 = %2 U32Sub %3
      return %4

  }

  // Function 2
  fn mul {
    parameters: [0, 1]
    entry: 0

    0:
      %2 = %0 U32Mul %1
      %3 = 2 (u32)
      %4 = %2 U32Mul %3
      return %4

  }

  // Function 3
  fn div {
    parameters: [0, 1]
    entry: 0

    0:
      %2 = %0 U32Div %1
      %3 = 2 (u32)
      %4 = %2 U32Div %3
      return %4

  }

  // Function 4
  fn get_u32_literal {
    entry: 0

    0:
      return 42

  }

}
