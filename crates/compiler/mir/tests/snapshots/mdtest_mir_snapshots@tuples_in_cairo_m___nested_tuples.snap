---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
description: "MIR snapshot for mdtest: Tuples in Cairo-M - Nested Tuples"
input_file: mdtest/03-types/01-tuples.md
---
Source:
fn nested_tuples() -> felt {
    let tuple = (1, 2, (3, 4));
    return foo(tuple);
}

fn foo(input: (felt, felt, (felt, felt))) -> felt {
    let (a, b, (c, d)) = input;
    return a + b + c + d;
}
============================================================
Generated MIR:
module {
  // Function 0
  fn nested_tuples {
    entry: 0

    0:
      %0 = maketuple 3, 4
      %4 = maketuple 1, 2, %0
      %2 = call 1(%4)
      return %2

  }

  // Function 1
  fn foo {
    parameters: [0]
    entry: 0

    0:
      %1 = extracttuple %0, 0
      %2 = extracttuple %0, 1
      %3 = extracttuple %0, 2
      %4 = extracttuple %3, 0
      %5 = extracttuple %3, 1
      %6 = %1 + %2
      %7 = %6 + %4
      %8 = %7 + %5
      return %8

  }

}
