---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
description: "MIR snapshot for mdtest: Cairo-M Assembly Opcodes - Complex Opcode Combinations - Function Call Chain"
input_file: mdtest/06-internals/01-opcodes.md
---
Source:
fn test_call_chain() -> felt {
    let a = 10;
    let b = 20;

    let result = add_and_multiply(a, b, 3);
    return result;
}

fn add_and_multiply(x: felt, y: felt, factor: felt) -> felt {
    let sum = x + y;
    let product = sum * factor;

    return compute_final(product, 5);
}

fn compute_final(value: felt, adjustment: felt) -> felt {
    return value + adjustment;
}
============================================================
Generated MIR:
module {
  // Function 0
  fn test_call_chain {
    entry: 0

    0:
      %0 = 10
      %1 = 20
      %2 = call 1(%0, %1, 3)
      return %2

  }

  // Function 1
  fn add_and_multiply {
    parameters: [0, 1, 2]
    entry: 0

    0:
      %3 = %0 Add %1
      %4 = %3 Mul %2
      %5 = call 2(%4, 5)
      return %5

  }

  // Function 2
  fn compute_final {
    parameters: [0, 1]
    entry: 0

    0:
      %2 = %0 Add %1
      return %2

  }

}
