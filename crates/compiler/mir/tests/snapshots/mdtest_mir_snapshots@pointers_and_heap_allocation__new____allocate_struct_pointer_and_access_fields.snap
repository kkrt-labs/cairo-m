---
source: crates/compiler/mir/tests/mdtest_snapshots.rs
assertion_line: 52
description: "MIR snapshot for mdtest: Pointers and Heap Allocation (new) - Allocate struct pointer and access fields"
input_file: mdtest/03-types/03-pointers-and-heap.md
---
Source:
struct Point { x: felt, y: felt }

fn alloc_struct() -> felt {
    let ps: Point* = new Point[2];
    // Write fields via pointer indexing then field
    (ps[0]).x = 3;
    (ps[0]).y = 4;
    (ps[1]).x = 5;
    (ps[1]).y = 6;
    return ps[0].x + ps[1].y;
}
============================================================
Generated MIR:
module {
  // Function 0
  fn alloc_struct {
    entry: 0

    0:
      %0 = 2 * 2
      %1 = heapalloccells %0
      %2 = load %1[0]
      store 3 -> %1[0].x
      %3 = load %1[0]
      store 4 -> %1[0].y
      %4 = load %1[1]
      store 5 -> %1[1].x
      %5 = load %1[1]
      store 6 -> %1[1].y
      %6 = load %1[0]
      %7 = load %1[0].x
      %8 = load %1[1]
      %9 = load %1[1].y
      %10 = %7 + %9
      return %10

  }

}
