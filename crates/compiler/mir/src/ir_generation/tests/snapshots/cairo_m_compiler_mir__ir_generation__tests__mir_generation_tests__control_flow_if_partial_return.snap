---
source: crates/compiler/mir/src/ir_generation/tests/mir_generation_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/mir/src/ir_generation/tests/mir_generation_tests.rs
expression: mir_output
---
Fixture: if_partial_return.cm
============================================================
Source code:
//!ASSERT BLOCK_COUNT(test): 4 // entry, then, else, merge
//!ASSERT CONTAINS: return 30

// Tests an `if-else` where one branch returns and the other continues.
// This is a critical test for correct merge block generation.
func test(x: felt) -> felt {
    if (x == 5) {
        return 10;
    } else {
        // This branch continues, so a merge block is required.
        let y = x + 1;
    }
    // This code must be reachable and generated in the merge block.
    return 30;
}

============================================================
Generated MIR:
module {
  // Function 0
  fn test {
    parameters: [0]
    entry: 0

    0:
      %1 = %0 Eq 5
      if %1 then jump 1 else jump 2

    1:
      return 10

    2:
      %3 = %0 Add 1
      %4 = stackalloc 1
      store %4, %3
      jump 3

    3:
      return 30

  }

}
