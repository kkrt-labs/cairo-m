---
source: crates/compiler/mir/src/ir_generation/tests/mir_generation_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/mir/src/ir_generation/tests/mir_generation_tests.rs
expression: mir_output
---
Fixture: for_with_breaks.cm
============================================================
Source code:
fn test_for_with_breaks() -> felt {
    //!ASSERT FUNCTION_COUNT: 1

    let result = 0;

    for (let count = 0; count < 10; count = count + 1) {
        if (count == 5) {
            continue;
        }

        result = result + count;

        if (count == 8) {
            break;
        }
    }

    return result;
}
============================================================
Generated MIR:
module {
  // Function 0
  fn test_for_with_breaks {
    entry: 0

    0:
      %0 = stackalloc 1
      store %0, 0
      %1 = stackalloc 1
      store %1, 0
      jump 1

    1:
      %2 = %1 Less 10
      if %2 then jump 2 else jump 4

    2:
      if %1 Eq 5 then jump 5 else jump 6

    3:
      %1 = %1 Add 1
      jump 1

    4:
      return %0

    5:
      jump 3

    6:
      %0 = %0 Add %1
      if %1 Eq 8 then jump 7 else jump 8

    7:
      jump 4

    8:
      jump 3

  }

}
