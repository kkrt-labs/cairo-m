---
source: crates/compiler/mir/src/ir_generation/tests/mir_generation_tests.rs
expression: snapshot_content
---
---
source: crates/compiler/mir/src/ir_generation/tests/mir_generation_tests.rs
expression: mir_output
---
Fixture: array_access.cm
============================================================
Source code:
// Tests l-value and r-value access for pointer types, mimicking array access.
// NOTE: `felt*` is a placeholder for a proper array/pointer type.
fn test_array_access(index: felt) -> felt {
    let arr: felt* = 42;  // Placeholder for getting a base address.
    arr[index] = 10;      // L-value: getelementptr for assignment.
    return arr[0];        // R-value: getelementptr + load for reading.
}

============================================================
Generated MIR:
module {
  // Function 0
  fn test_array_access {
    parameters: [0]
    entry: 0

    0:
      %1 = stackalloc 1
      store %1, 42
      // Get address of array element
%2 = getelementptr %1, %0
      store %2, 10
      // Get address of array element
%3 = getelementptr %1, 0
      %4 = load %3
      return %4

  }

}
