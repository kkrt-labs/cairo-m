---
source: crates/compiler/semantic/tests/common/mod.rs
expression: snapshot
---
--- Input 1 (ERROR) ---
fn test() { let (x, y) = 42; return; }
--- Diagnostics ---
[2001] Error: Cannot destructure non-tuple type `felt` in tuple pattern
   ╭─[ semantic_tests::functions::tuples::test_tuple_destructuring:1:26 ]
   │
 1 │ fn test() { let (x, y) = 42; return; }
   │                          ─┬  
   │                           ╰── Cannot destructure non-tuple type `felt` in tuple pattern
───╯

============================================================

--- Input 2 (ERROR) ---
fn test() { let (x, y) = (1, 2, 3); return; }
--- Diagnostics ---
[2001] Error: Tuple pattern has 2 elements but value has 3 elements
   ╭─[ semantic_tests::functions::tuples::test_tuple_destructuring:1:26 ]
   │
 1 │ fn test() { let (x, y) = (1, 2, 3); return; }
   │                          ────┬────  
   │                              ╰────── Tuple pattern has 2 elements but value has 3 elements
───╯

============================================================

--- Input 3 (ERROR) ---
fn test() { let (x, y): felt = (1, 2); return; }
--- Diagnostics ---
[2001] Error: Type mismatch for tuple destructuring. Expected `felt`, found `(felt, felt)`
   ╭─[ semantic_tests::functions::tuples::test_tuple_destructuring:1:32 ]
   │
 1 │ fn test() { let (x, y): felt = (1, 2); return; }
   │                                ───┬──  
   │                                   ╰──── Type mismatch for tuple destructuring. Expected `felt`, found `(felt, felt)`
───╯

============================================================

--- Input 4 (ERROR) ---
fn test() { let (x, x) = (1, 2); return; }
--- Diagnostics ---
[1008] Error: identifier `x` is bound more than once in the same pattern
   ╭─[ semantic_tests::functions::tuples::test_tuple_destructuring:1:21 ]
   │
 1 │ fn test() { let (x, x) = (1, 2); return; }
   │                     ┬  
   │                     ╰── identifier `x` is bound more than once in the same pattern
───╯
