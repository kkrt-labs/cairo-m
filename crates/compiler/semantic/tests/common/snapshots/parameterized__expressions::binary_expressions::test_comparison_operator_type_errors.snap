---
source: crates/compiler/semantic/tests/common/mod.rs
expression: snapshot
---
--- Input 1 (ERROR) ---
fn test() { let x: felt = 42; let y: u32 = 100; let c1 = x == y; }
--- Diagnostics ---
[2001] Error: Invalid right operand for arithmetic operator `==`. Expected `felt`, found `u32`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:63 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c1 = x == y; }
   │                                                               ┬  
   │                                                               ╰── Invalid right operand for arithmetic operator `==`. Expected `felt`, found `u32`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:4 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c1 = x == y; }
   │    ──┬─  
   │      ╰─── Function 'test' doesn't return on all paths
───╯

============================================================

--- Input 2 (ERROR) ---
fn test() { let x: felt = 42; let y: u32 = 100; let c2 = x != y; }
--- Diagnostics ---
[2001] Error: Invalid right operand for arithmetic operator `!=`. Expected `felt`, found `u32`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:63 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c2 = x != y; }
   │                                                               ┬  
   │                                                               ╰── Invalid right operand for arithmetic operator `!=`. Expected `felt`, found `u32`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:4 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c2 = x != y; }
   │    ──┬─  
   │      ╰─── Function 'test' doesn't return on all paths
───╯

============================================================

--- Input 3 (ERROR) ---
fn test() { let x: felt = 42; let y: u32 = 100; let c3 = x < y; }
--- Diagnostics ---
[2001] Error: Operator `<` is not supported for type `felt`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:58 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c3 = x < y; }
   │                                                          ┬  
   │                                                          ╰── Operator `<` is not supported for type `felt`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:4 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c3 = x < y; }
   │    ──┬─  
   │      ╰─── Function 'test' doesn't return on all paths
───╯

============================================================

--- Input 4 (ERROR) ---
fn test() { let x: felt = 42; let y: u32 = 100; let c4 = x > y; }
--- Diagnostics ---
[2001] Error: Operator `>` is not supported for type `felt`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:58 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c4 = x > y; }
   │                                                          ┬  
   │                                                          ╰── Operator `>` is not supported for type `felt`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:4 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c4 = x > y; }
   │    ──┬─  
   │      ╰─── Function 'test' doesn't return on all paths
───╯

============================================================

--- Input 5 (ERROR) ---
fn test() { let x: felt = 42; let y: u32 = 100; let c5 = x <= y; }
--- Diagnostics ---
[2001] Error: Operator `<=` is not supported for type `felt`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:58 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c5 = x <= y; }
   │                                                          ┬  
   │                                                          ╰── Operator `<=` is not supported for type `felt`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:4 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c5 = x <= y; }
   │    ──┬─  
   │      ╰─── Function 'test' doesn't return on all paths
───╯

============================================================

--- Input 6 (ERROR) ---
fn test() { let x: felt = 42; let y: u32 = 100; let c6 = x >= y; }
--- Diagnostics ---
[2001] Error: Operator `>=` is not supported for type `felt`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:58 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c6 = x >= y; }
   │                                                          ┬  
   │                                                          ╰── Operator `>=` is not supported for type `felt`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:4 ]
   │
 1 │ fn test() { let x: felt = 42; let y: u32 = 100; let c6 = x >= y; }
   │    ──┬─  
   │      ╰─── Function 'test' doesn't return on all paths
───╯

============================================================

--- Input 7 (ERROR) ---
fn test() { let x: felt = 42; let b: bool = true; let c7 = x == b; }
--- Diagnostics ---
[2001] Error: Invalid right operand for arithmetic operator `==`. Expected `felt`, found `bool`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:65 ]
   │
 1 │ fn test() { let x: felt = 42; let b: bool = true; let c7 = x == b; }
   │                                                            ┬    ┬  
   │                                                            ╰─────── Cannot use bool in arithmetic operations. Consider using logical operators (&&, ||) instead.
   │                                                                 │  
   │                                                                 ╰── Invalid right operand for arithmetic operator `==`. Expected `felt`, found `bool`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:4 ]
   │
 1 │ fn test() { let x: felt = 42; let b: bool = true; let c7 = x == b; }
   │    ──┬─  
   │      ╰─── Function 'test' doesn't return on all paths
───╯

============================================================

--- Input 8 (ERROR) ---
struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10, y: 20 }; let x: felt = 42; let c8 = p == x; }
--- Diagnostics ---
[2001] Error: Operator `==` is not supported for type `Point`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:106 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10, y: 20 }; let x: felt = 42; let c8 = p == x; }
   │                                                                                                          ┬  
   │                                                                                                          ╰── Operator `==` is not supported for type `Point`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:38 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10, y: 20 }; let x: felt = 42; let c8 = p == x; }
   │                                      ──┬─  
   │                                        ╰─── Function 'test' doesn't return on all paths
───╯

============================================================

--- Input 9 (ERROR) ---
struct Point { x: felt, y: felt } fn test() { let p1 = Point { x: 10, y: 20 }; let p2 = Point { x: 30, y: 40 }; let is_greater = p1 > p2; }
--- Diagnostics ---
[2001] Error: Operator `>` is not supported for type `Point`
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:130 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p1 = Point { x: 10, y: 20 }; let p2 = Point { x: 30, y: 40 }; let is_greater = p1 > p2; }
   │                                                                                                                                  ─┬  
   │                                                                                                                                   ╰── Operator `>` is not supported for type `Point`
───╯
[3002] Error: Function 'test' doesn't return on all paths
   ╭─[ semantic_tests::expressions::binary_expressions::test_comparison_operator_type_errors:1:38 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p1 = Point { x: 10, y: 20 }; let p2 = Point { x: 30, y: 40 }; let is_greater = p1 > p2; }
   │                                      ──┬─  
   │                                        ╰─── Function 'test' doesn't return on all paths
───╯
