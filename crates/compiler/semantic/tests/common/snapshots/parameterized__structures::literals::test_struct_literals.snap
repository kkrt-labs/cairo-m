---
source: crates/compiler/semantic/tests/common/mod.rs
expression: snapshot
---
--- Input 1 (ERROR) ---
struct Point {x: felt, x: felt}
--- Diagnostics ---
[1007] Error: field `x` is already declared
   ╭─[ semantic_tests::structures::literals::test_struct_literals:1:24 ]
   │
 1 │ struct Point {x: felt, x: felt}
   │                        ┬  
   │                        ╰── field `x` is already declared
───╯

============================================================

--- Input 2 (ERROR) ---
struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10, y: 20, z: 30 }; return; }
--- Diagnostics ---
[2002] Error: Field `z` does not exist in struct `Point`
   ╭─[ semantic_tests::structures::literals::test_struct_literals:1:77 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10, y: 20, z: 30 }; return; }
   │                                                                             ┬  
   │                                                                             ╰── Field `z` does not exist in struct `Point`
───╯
[2001] Error: Field `z` not found in struct `Point`
   ╭─[ semantic_tests::structures::literals::test_struct_literals:1:77 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10, y: 20, z: 30 }; return; }
   │                                                                             ┬  
   │                                                                             ╰── Field `z` not found in struct `Point`
───╯

============================================================

--- Input 3 (ERROR) ---
struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10 }; } return;
--- Diagnostics ---
[02] Error: found 'return' expected 'fn', 'struct', 'const', 'use', or end of input
   ╭─[ semantic_tests::structures::literals::test_struct_literals:1:74 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10 }; } return;
   │                                                                          ───┬──  
   │                                                                             ╰──── found 'return' expected 'fn', 'struct', 'const', 'use', or end of input
───╯

============================================================

--- Input 4 (ERROR) ---
struct Point { x: felt, y: felt } fn test() { let p = Point { x: true, y: 20 }; return;}
--- Diagnostics ---
[2001] Error: type mismatch for field `x`: expected `felt`, got `bool`
   ╭─[ semantic_tests::structures::literals::test_struct_literals:1:66 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p = Point { x: true, y: 20 }; return;}
   │                                                               ┬  ──┬─  
   │                                                               ╰──────── field declared here
   │                                                                    │   
   │                                                                    ╰─── type mismatch for field `x`: expected `felt`, got `bool`
───╯

============================================================

--- Input 5 (ERROR) ---
struct Point { fields: (felt, bool) } fn test() { let p = Point { fields: (10, 20) }; return; }
--- Diagnostics ---
[2001] Error: type mismatch for field `fields`: expected `(felt, bool)`, got `(felt, felt)`
   ╭─[ semantic_tests::structures::literals::test_struct_literals:1:75 ]
   │
 1 │ struct Point { fields: (felt, bool) } fn test() { let p = Point { fields: (10, 20) }; return; }
   │                                                                   ───┬──  ────┬───  
   │                                                                      ╰────────────── field declared here
   │                                                                               │     
   │                                                                               ╰───── type mismatch for field `fields`: expected `(felt, bool)`, got `(felt, felt)`
───╯

============================================================

--- Input 6 (ERROR) ---

                struct Foo { bar: (u32, (bool, felt)) }
                fn test() { let f = Foo { bar: (10, (1, 20)) }; return; }
--- Diagnostics ---
[2001] Error: type mismatch for field `bar`: expected `(u32, (bool, felt))`, got `(u32, (felt, felt))`
   ╭─[ semantic_tests::structures::literals::test_struct_literals:3:48 ]
   │
 3 │                 fn test() { let f = Foo { bar: (10, (1, 20)) }; return; }
   │                                           ─┬─  ──────┬──────  
   │                                            ╰────────────────── field declared here
   │                                                      │        
   │                                                      ╰──────── type mismatch for field `bar`: expected `(u32, (bool, felt))`, got `(u32, (felt, felt))`
───╯

============================================================

--- Input 7 (ERROR) ---
struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10, y: 20u32 }; return; }
--- Diagnostics ---
[2001] Error: type mismatch for field `y`: expected `felt`, got `u32`
   ╭─[ semantic_tests::structures::literals::test_struct_literals:1:73 ]
   │
 1 │ struct Point { x: felt, y: felt } fn test() { let p = Point { x: 10, y: 20u32 }; return; }
   │                                                                      ┬  ──┬──  
   │                                                                      ╰───────── field declared here
   │                                                                           │    
   │                                                                           ╰──── type mismatch for field `y`: expected `felt`, got `u32`
───╯
