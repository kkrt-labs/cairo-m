---
source: crates/compiler/semantic/tests/common/mod.rs
expression: snapshot
---
--- Input 1 (ERROR) ---
fn test() { let tt = (1, 2); let x = tt.2; return; }
--- Diagnostics ---
[2012] Error: no field `2` on type `(felt, felt)`
   ╭─[ semantic_tests::functions::tuples::test_tuple_indexing:1:38 ]
   │
 1 │ fn test() { let tt = (1, 2); let x = tt.2; return; }
   │                                      ─┬  
   │                                       ╰── no field `2` on type `(felt, felt)`
───╯

============================================================

--- Input 2 (ERROR) ---
fn test() { let tt = (1, 2, 3); let x = tt.3; return; }
--- Diagnostics ---
[2012] Error: no field `3` on type `(felt, felt, felt)`
   ╭─[ semantic_tests::functions::tuples::test_tuple_indexing:1:41 ]
   │
 1 │ fn test() { let tt = (1, 2, 3); let x = tt.3; return; }
   │                                         ─┬  
   │                                          ╰── no field `3` on type `(felt, felt, felt)`
───╯

============================================================

--- Input 3 (ERROR) ---
fn test() { let x = 42; let y = x.0; return; }
--- Diagnostics ---
[2013] Error: Cannot use tuple index on type `felt`
   ╭─[ semantic_tests::functions::tuples::test_tuple_indexing:1:33 ]
   │
 1 │ fn test() { let x = 42; let y = x.0; return; }
   │                                 ┬  
   │                                 ╰── Cannot use tuple index on type `felt`
───╯

============================================================

--- Input 4 (ERROR) ---
fn test() { let tt: (felt, felt) = (1, 2); let x: (felt, felt) = tt.0; return; }
--- Diagnostics ---
[2001] Error: Type mismatch for let statement `x`. Expected `(felt, felt)`, found `felt`
   ╭─[ semantic_tests::functions::tuples::test_tuple_indexing:1:66 ]
   │
 1 │ fn test() { let tt: (felt, felt) = (1, 2); let x: (felt, felt) = tt.0; return; }
   │                                                                  ──┬─  
   │                                                                    ╰─── Type mismatch for let statement `x`. Expected `(felt, felt)`, found `felt`
───╯
