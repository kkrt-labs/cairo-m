// Test tuple destructuring in let and local statements

func test_basic_tuple_destructuring() -> felt {
    let (x, y) = (10, 20);
    return x + y;
}

func test_tuple_destructuring_with_type() {
    let (a, b): (felt, felt) = (1, 2);
    local (c, d): (felt, felt) = (3, 4);
}

func returns_tuple() -> (felt, felt) {
    return (100, 200);
}

func test_function_return_destructuring() -> felt {
    let (a, b) = returns_tuple();
    return a + b;
}

func test_nested_scopes() {
    let (x, y) = (1, 2);
    {
        let (x, y) = (10, 20); // Shadow outer x, y
        let sum = x + y; // Should be 30
    }
    let sum = x + y; // Should be 3
}

// Test type mismatch error
func test_type_mismatch() {
    let (x, y) = 42; // Error: Cannot destructure non-tuple
}

// Test arity mismatch
func test_arity_mismatch() {
    let (x, y) = (1, 2, 3); // Error: Pattern has 2 elements but value has 3
}

// Test with explicit wrong type
func test_wrong_type_annotation() {
    let (x, y): felt = (1, 2); // Error: Expected felt, found tuple
}