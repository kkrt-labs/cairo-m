---
source: crates/compiler/semantic/src/validation/tests/mod.rs
expression: snapshot_content
---
Fixture: missing_return.cm
============================================================
Source code:
// Function with return type but missing return on some paths
func missing_return_if(x: felt) -> felt {
    if (x == 0) {
        return x;
    }
    let x = 3;
    // Missing return here - function doesn't return on all paths
}

// Function with return type but no return at all
func no_return_at_all(x: felt) -> felt {
    let y = x + 1;
    // Missing return entirely
}

// Function that returns on all paths (should be fine)
func proper_return(x: felt) -> felt {
    if (x == 0) {
        return x;
    } else {
        return 0;
    }
}

// Function with no return type (should be fine without explicit return)
func no_return_type(x: felt) {
    let y = x + 1;
}

// Function with unit return type (should not be fine without explicit return)
func unit_return_type(x: felt) -> () {
    let y = x + 1;
    // Error: Missing return here
}

// Function with nested control flow missing return
func nested_missing_return(x: felt, y: felt) -> felt {
    if (x == 0) {
        if (y == 0) {
            return x + y;
        }
        // Missing return here
    } else {
        return 0;
    }
    // Also missing return here
}

// Function that returns in nested blocks correctly
func nested_proper_return(x: felt, y: felt) -> felt {
    if (x == 0) {
        if (y == 0) {
            return x + y;
        } else {
            return x;
        }
    } else {
        return 0;
    }
}

============================================================
Found 10 diagnostic(s):

--- Diagnostic 1 ---
[1003] Error: Duplicate definition of 'x'
   ╭─[ <unknown>:6:9 ]
   │
 6 │     let x = 3;
   │         ┬  
   │         ╰── Duplicate definition of 'x'
───╯

--- Diagnostic 2 ---
[1002] Warning: Unused variable 'x'
   ╭─[ <unknown>:6:9 ]
   │
 6 │     let x = 3;
   │         ┬  
   │         ╰── Unused variable 'x'
───╯

--- Diagnostic 3 ---
[1002] Warning: Unused variable 'y'
    ╭─[ <unknown>:12:9 ]
    │
 12 │     let y = x + 1;
    │         ┬  
    │         ╰── Unused variable 'y'
────╯

--- Diagnostic 4 ---
[1002] Warning: Unused variable 'y'
    ╭─[ <unknown>:27:9 ]
    │
 27 │     let y = x + 1;
    │         ┬  
    │         ╰── Unused variable 'y'
────╯

--- Diagnostic 5 ---
[1002] Warning: Unused variable 'y'
    ╭─[ <unknown>:32:9 ]
    │
 32 │     let y = x + 1;
    │         ┬  
    │         ╰── Unused variable 'y'
────╯

--- Diagnostic 6 ---
[3002] Error: Function 'missing_return_if' doesn't return on all paths
   ╭─[ <unknown>:2:6 ]
   │
 2 │ func missing_return_if(x: felt) -> felt {
   │      ────────┬────────  
   │              ╰────────── Function 'missing_return_if' doesn't return on all paths
───╯

--- Diagnostic 7 ---
[3002] Error: Function 'no_return_at_all' doesn't return on all paths
    ╭─[ <unknown>:11:6 ]
    │
 11 │ func no_return_at_all(x: felt) -> felt {
    │      ────────┬───────  
    │              ╰───────── Function 'no_return_at_all' doesn't return on all paths
────╯

--- Diagnostic 8 ---
[3002] Error: Function 'no_return_type' doesn't return on all paths
    ╭─[ <unknown>:26:6 ]
    │
 26 │ func no_return_type(x: felt) {
    │      ───────┬──────  
    │             ╰──────── Function 'no_return_type' doesn't return on all paths
────╯

--- Diagnostic 9 ---
[3002] Error: Function 'unit_return_type' doesn't return on all paths
    ╭─[ <unknown>:31:6 ]
    │
 31 │ func unit_return_type(x: felt) -> () {
    │      ────────┬───────  
    │              ╰───────── Function 'unit_return_type' doesn't return on all paths
────╯

--- Diagnostic 10 ---
[3002] Error: Function 'nested_missing_return' doesn't return on all paths
    ╭─[ <unknown>:37:6 ]
    │
 37 │ func nested_missing_return(x: felt, y: felt) -> felt {
    │      ──────────┬──────────  
    │                ╰──────────── Function 'nested_missing_return' doesn't return on all paths
────╯
