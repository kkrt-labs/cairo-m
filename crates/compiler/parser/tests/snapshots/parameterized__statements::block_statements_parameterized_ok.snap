---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Input 1 ---
fn test() { { let x = 1; let y = 2; } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Block(
                            [
                                Spanned(
                                    Let {
                                        pattern: Identifier(
                                            Spanned(
                                                "x",
                                                18..19,
                                            ),
                                        ),
                                        statement_type: None,
                                        value: Spanned(
                                            Literal(
                                                1,
                                            ),
                                            22..23,
                                        ),
                                    },
                                    14..24,
                                ),
                                Spanned(
                                    Let {
                                        pattern: Identifier(
                                            Spanned(
                                                "y",
                                                29..30,
                                            ),
                                        ),
                                        statement_type: None,
                                        value: Spanned(
                                            Literal(
                                                2,
                                            ),
                                            33..34,
                                        ),
                                    },
                                    25..35,
                                ),
                            ],
                        ),
                        12..37,
                    ),
                ],
            },
            0..39,
        ),
    ),
]
============================================================

--- Input 2 ---
fn test() { { { let inner = 1; } let outer = 2; } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Block(
                            [
                                Spanned(
                                    Block(
                                        [
                                            Spanned(
                                                Let {
                                                    pattern: Identifier(
                                                        Spanned(
                                                            "inner",
                                                            20..25,
                                                        ),
                                                    ),
                                                    statement_type: None,
                                                    value: Spanned(
                                                        Literal(
                                                            1,
                                                        ),
                                                        28..29,
                                                    ),
                                                },
                                                16..30,
                                            ),
                                        ],
                                    ),
                                    14..32,
                                ),
                                Spanned(
                                    Let {
                                        pattern: Identifier(
                                            Spanned(
                                                "outer",
                                                37..42,
                                            ),
                                        ),
                                        statement_type: None,
                                        value: Spanned(
                                            Literal(
                                                2,
                                            ),
                                            45..46,
                                        ),
                                    },
                                    33..47,
                                ),
                            ],
                        ),
                        12..49,
                    ),
                ],
            },
            0..51,
        ),
    ),
]
============================================================

--- Input 3 ---
fn test() { if (true) { if (false) { if (true) { if (true) { if (true) { let x = 1; } } } } } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        If {
                            condition: Spanned(
                                BooleanLiteral(
                                    true,
                                ),
                                16..20,
                            ),
                            then_block: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            If {
                                                condition: Spanned(
                                                    BooleanLiteral(
                                                        false,
                                                    ),
                                                    28..33,
                                                ),
                                                then_block: Spanned(
                                                    Block(
                                                        [
                                                            Spanned(
                                                                If {
                                                                    condition: Spanned(
                                                                        BooleanLiteral(
                                                                            true,
                                                                        ),
                                                                        41..45,
                                                                    ),
                                                                    then_block: Spanned(
                                                                        Block(
                                                                            [
                                                                                Spanned(
                                                                                    If {
                                                                                        condition: Spanned(
                                                                                            BooleanLiteral(
                                                                                                true,
                                                                                            ),
                                                                                            53..57,
                                                                                        ),
                                                                                        then_block: Spanned(
                                                                                            Block(
                                                                                                [
                                                                                                    Spanned(
                                                                                                        If {
                                                                                                            condition: Spanned(
                                                                                                                BooleanLiteral(
                                                                                                                    true,
                                                                                                                ),
                                                                                                                65..69,
                                                                                                            ),
                                                                                                            then_block: Spanned(
                                                                                                                Block(
                                                                                                                    [
                                                                                                                        Spanned(
                                                                                                                            Let {
                                                                                                                                pattern: Identifier(
                                                                                                                                    Spanned(
                                                                                                                                        "x",
                                                                                                                                        77..78,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                statement_type: None,
                                                                                                                                value: Spanned(
                                                                                                                                    Literal(
                                                                                                                                        1,
                                                                                                                                    ),
                                                                                                                                    81..82,
                                                                                                                                ),
                                                                                                                            },
                                                                                                                            73..83,
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                ),
                                                                                                                71..85,
                                                                                                            ),
                                                                                                            else_block: None,
                                                                                                        },
                                                                                                        61..85,
                                                                                                    ),
                                                                                                ],
                                                                                            ),
                                                                                            59..87,
                                                                                        ),
                                                                                        else_block: None,
                                                                                    },
                                                                                    49..87,
                                                                                ),
                                                                            ],
                                                                        ),
                                                                        47..89,
                                                                    ),
                                                                    else_block: None,
                                                                },
                                                                37..89,
                                                            ),
                                                        ],
                                                    ),
                                                    35..91,
                                                ),
                                                else_block: None,
                                            },
                                            24..91,
                                        ),
                                    ],
                                ),
                                22..93,
                            ),
                            else_block: None,
                        },
                        12..93,
                    ),
                ],
            },
            0..95,
        ),
    ),
]
