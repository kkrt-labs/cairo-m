---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Input 1 ---
fn test() { loop { let x = 1; } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        Loop {
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            Let {
                                                pattern: Identifier(
                                                    Spanned(
                                                        "x",
                                                        23..24,
                                                    ),
                                                ),
                                                statement_type: None,
                                                value: Spanned(
                                                    Literal(
                                                        1,
                                                        None,
                                                    ),
                                                    27..28,
                                                ),
                                            },
                                            19..29,
                                        ),
                                    ],
                                ),
                                17..31,
                            ),
                        },
                        12..31,
                    ),
                ],
            },
            0..33,
        ),
    ),
]
============================================================

--- Input 2 ---
fn test() { loop { break; } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        Loop {
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            Break,
                                            19..25,
                                        ),
                                    ],
                                ),
                                17..27,
                            ),
                        },
                        12..27,
                    ),
                ],
            },
            0..29,
        ),
    ),
]
============================================================

--- Input 3 ---
fn test() { loop { continue; } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        Loop {
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            Continue,
                                            19..28,
                                        ),
                                    ],
                                ),
                                17..30,
                            ),
                        },
                        12..30,
                    ),
                ],
            },
            0..32,
        ),
    ),
]
============================================================

--- Input 4 ---
fn test() { while (x != 10) { x = x + 1; } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        While {
                            condition: Spanned(
                                BinaryOp {
                                    op: Neq,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "x",
                                                19..20,
                                            ),
                                        ),
                                        19..20,
                                    ),
                                    right: Spanned(
                                        Literal(
                                            10,
                                            None,
                                        ),
                                        24..26,
                                    ),
                                },
                                19..26,
                            ),
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            Assignment {
                                                lhs: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "x",
                                                            30..31,
                                                        ),
                                                    ),
                                                    30..31,
                                                ),
                                                rhs: Spanned(
                                                    BinaryOp {
                                                        op: Add,
                                                        left: Spanned(
                                                            Identifier(
                                                                Spanned(
                                                                    "x",
                                                                    34..35,
                                                                ),
                                                            ),
                                                            34..35,
                                                        ),
                                                        right: Spanned(
                                                            Literal(
                                                                1,
                                                                None,
                                                            ),
                                                            38..39,
                                                        ),
                                                    },
                                                    34..39,
                                                ),
                                            },
                                            30..40,
                                        ),
                                    ],
                                ),
                                28..42,
                            ),
                        },
                        12..42,
                    ),
                ],
            },
            0..44,
        ),
    ),
]
============================================================

--- Input 5 ---
fn test() { while (true) { if (done) { break; } } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        While {
                            condition: Spanned(
                                BooleanLiteral(
                                    true,
                                ),
                                19..23,
                            ),
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            If {
                                                condition: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "done",
                                                            31..35,
                                                        ),
                                                    ),
                                                    31..35,
                                                ),
                                                then_block: Spanned(
                                                    Block(
                                                        [
                                                            Spanned(
                                                                Break,
                                                                39..45,
                                                            ),
                                                        ],
                                                    ),
                                                    37..47,
                                                ),
                                                else_block: None,
                                            },
                                            27..47,
                                        ),
                                    ],
                                ),
                                25..49,
                            ),
                        },
                        12..49,
                    ),
                ],
            },
            0..51,
        ),
    ),
]
============================================================

--- Input 6 ---
fn test() { for (let i = 0; i < 10; i = i + 1) { let x = i; } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        For {
                            init: Spanned(
                                Let {
                                    pattern: Identifier(
                                        Spanned(
                                            "i",
                                            21..22,
                                        ),
                                    ),
                                    statement_type: None,
                                    value: Spanned(
                                        Literal(
                                            0,
                                            None,
                                        ),
                                        25..26,
                                    ),
                                },
                                17..27,
                            ),
                            condition: Spanned(
                                BinaryOp {
                                    op: Less,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "i",
                                                28..29,
                                            ),
                                        ),
                                        28..29,
                                    ),
                                    right: Spanned(
                                        Literal(
                                            10,
                                            None,
                                        ),
                                        32..34,
                                    ),
                                },
                                28..34,
                            ),
                            step: Spanned(
                                Assignment {
                                    lhs: Spanned(
                                        Identifier(
                                            Spanned(
                                                "i",
                                                36..37,
                                            ),
                                        ),
                                        36..37,
                                    ),
                                    rhs: Spanned(
                                        BinaryOp {
                                            op: Add,
                                            left: Spanned(
                                                Identifier(
                                                    Spanned(
                                                        "i",
                                                        40..41,
                                                    ),
                                                ),
                                                40..41,
                                            ),
                                            right: Spanned(
                                                Literal(
                                                    1,
                                                    None,
                                                ),
                                                44..45,
                                            ),
                                        },
                                        40..45,
                                    ),
                                },
                                36..45,
                            ),
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            Let {
                                                pattern: Identifier(
                                                    Spanned(
                                                        "x",
                                                        53..54,
                                                    ),
                                                ),
                                                statement_type: None,
                                                value: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "i",
                                                            57..58,
                                                        ),
                                                    ),
                                                    57..58,
                                                ),
                                            },
                                            49..59,
                                        ),
                                    ],
                                ),
                                47..61,
                            ),
                        },
                        12..61,
                    ),
                ],
            },
            0..63,
        ),
    ),
]
============================================================

--- Input 7 ---
fn test() { for (let item = 0; item < items_len; item = item + 1) { if (skip) { continue; } process(item); } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        For {
                            init: Spanned(
                                Let {
                                    pattern: Identifier(
                                        Spanned(
                                            "item",
                                            21..25,
                                        ),
                                    ),
                                    statement_type: None,
                                    value: Spanned(
                                        Literal(
                                            0,
                                            None,
                                        ),
                                        28..29,
                                    ),
                                },
                                17..30,
                            ),
                            condition: Spanned(
                                BinaryOp {
                                    op: Less,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "item",
                                                31..35,
                                            ),
                                        ),
                                        31..35,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "items_len",
                                                38..47,
                                            ),
                                        ),
                                        38..47,
                                    ),
                                },
                                31..47,
                            ),
                            step: Spanned(
                                Assignment {
                                    lhs: Spanned(
                                        Identifier(
                                            Spanned(
                                                "item",
                                                49..53,
                                            ),
                                        ),
                                        49..53,
                                    ),
                                    rhs: Spanned(
                                        BinaryOp {
                                            op: Add,
                                            left: Spanned(
                                                Identifier(
                                                    Spanned(
                                                        "item",
                                                        56..60,
                                                    ),
                                                ),
                                                56..60,
                                            ),
                                            right: Spanned(
                                                Literal(
                                                    1,
                                                    None,
                                                ),
                                                63..64,
                                            ),
                                        },
                                        56..64,
                                    ),
                                },
                                49..64,
                            ),
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            If {
                                                condition: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "skip",
                                                            72..76,
                                                        ),
                                                    ),
                                                    72..76,
                                                ),
                                                then_block: Spanned(
                                                    Block(
                                                        [
                                                            Spanned(
                                                                Continue,
                                                                80..89,
                                                            ),
                                                        ],
                                                    ),
                                                    78..91,
                                                ),
                                                else_block: None,
                                            },
                                            68..91,
                                        ),
                                        Spanned(
                                            Expression(
                                                Spanned(
                                                    FunctionCall {
                                                        callee: Spanned(
                                                            Identifier(
                                                                Spanned(
                                                                    "process",
                                                                    92..99,
                                                                ),
                                                            ),
                                                            92..99,
                                                        ),
                                                        args: [
                                                            Spanned(
                                                                Identifier(
                                                                    Spanned(
                                                                        "item",
                                                                        100..104,
                                                                    ),
                                                                ),
                                                                100..104,
                                                            ),
                                                        ],
                                                    },
                                                    92..104,
                                                ),
                                            ),
                                            92..106,
                                        ),
                                    ],
                                ),
                                66..108,
                            ),
                        },
                        12..108,
                    ),
                ],
            },
            0..110,
        ),
    ),
]
============================================================

--- Input 8 ---
fn test() { while (outer) { for (let inner = 0; inner < items_len; inner = inner + 1) { if (found) { break; } } } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        While {
                            condition: Spanned(
                                Identifier(
                                    Spanned(
                                        "outer",
                                        19..24,
                                    ),
                                ),
                                19..24,
                            ),
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            For {
                                                init: Spanned(
                                                    Let {
                                                        pattern: Identifier(
                                                            Spanned(
                                                                "inner",
                                                                37..42,
                                                            ),
                                                        ),
                                                        statement_type: None,
                                                        value: Spanned(
                                                            Literal(
                                                                0,
                                                                None,
                                                            ),
                                                            45..46,
                                                        ),
                                                    },
                                                    33..47,
                                                ),
                                                condition: Spanned(
                                                    BinaryOp {
                                                        op: Less,
                                                        left: Spanned(
                                                            Identifier(
                                                                Spanned(
                                                                    "inner",
                                                                    48..53,
                                                                ),
                                                            ),
                                                            48..53,
                                                        ),
                                                        right: Spanned(
                                                            Identifier(
                                                                Spanned(
                                                                    "items_len",
                                                                    56..65,
                                                                ),
                                                            ),
                                                            56..65,
                                                        ),
                                                    },
                                                    48..65,
                                                ),
                                                step: Spanned(
                                                    Assignment {
                                                        lhs: Spanned(
                                                            Identifier(
                                                                Spanned(
                                                                    "inner",
                                                                    67..72,
                                                                ),
                                                            ),
                                                            67..72,
                                                        ),
                                                        rhs: Spanned(
                                                            BinaryOp {
                                                                op: Add,
                                                                left: Spanned(
                                                                    Identifier(
                                                                        Spanned(
                                                                            "inner",
                                                                            75..80,
                                                                        ),
                                                                    ),
                                                                    75..80,
                                                                ),
                                                                right: Spanned(
                                                                    Literal(
                                                                        1,
                                                                        None,
                                                                    ),
                                                                    83..84,
                                                                ),
                                                            },
                                                            75..84,
                                                        ),
                                                    },
                                                    67..84,
                                                ),
                                                body: Spanned(
                                                    Block(
                                                        [
                                                            Spanned(
                                                                If {
                                                                    condition: Spanned(
                                                                        Identifier(
                                                                            Spanned(
                                                                                "found",
                                                                                92..97,
                                                                            ),
                                                                        ),
                                                                        92..97,
                                                                    ),
                                                                    then_block: Spanned(
                                                                        Block(
                                                                            [
                                                                                Spanned(
                                                                                    Break,
                                                                                    101..107,
                                                                                ),
                                                                            ],
                                                                        ),
                                                                        99..109,
                                                                    ),
                                                                    else_block: None,
                                                                },
                                                                88..109,
                                                            ),
                                                        ],
                                                    ),
                                                    86..111,
                                                ),
                                            },
                                            28..111,
                                        ),
                                    ],
                                ),
                                26..113,
                            ),
                        },
                        12..113,
                    ),
                ],
            },
            0..115,
        ),
    ),
]
============================================================

--- Input 9 ---
fn test() { if (condition) { loop { work(); if (done) { break; } } } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        If {
                            condition: Spanned(
                                Identifier(
                                    Spanned(
                                        "condition",
                                        16..25,
                                    ),
                                ),
                                16..25,
                            ),
                            then_block: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            Loop {
                                                body: Spanned(
                                                    Block(
                                                        [
                                                            Spanned(
                                                                Expression(
                                                                    Spanned(
                                                                        FunctionCall {
                                                                            callee: Spanned(
                                                                                Identifier(
                                                                                    Spanned(
                                                                                        "work",
                                                                                        36..40,
                                                                                    ),
                                                                                ),
                                                                                36..40,
                                                                            ),
                                                                            args: [],
                                                                        },
                                                                        36..42,
                                                                    ),
                                                                ),
                                                                36..43,
                                                            ),
                                                            Spanned(
                                                                If {
                                                                    condition: Spanned(
                                                                        Identifier(
                                                                            Spanned(
                                                                                "done",
                                                                                48..52,
                                                                            ),
                                                                        ),
                                                                        48..52,
                                                                    ),
                                                                    then_block: Spanned(
                                                                        Block(
                                                                            [
                                                                                Spanned(
                                                                                    Break,
                                                                                    56..62,
                                                                                ),
                                                                            ],
                                                                        ),
                                                                        54..64,
                                                                    ),
                                                                    else_block: None,
                                                                },
                                                                44..64,
                                                            ),
                                                        ],
                                                    ),
                                                    34..66,
                                                ),
                                            },
                                            29..66,
                                        ),
                                    ],
                                ),
                                27..68,
                            ),
                            else_block: None,
                        },
                        12..68,
                    ),
                ],
            },
            0..70,
        ),
    ),
]
============================================================

--- Input 10 ---
fn test() { break; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        Break,
                        12..18,
                    ),
                ],
            },
            0..20,
        ),
    ),
]
============================================================

--- Input 11 ---
fn test() { continue; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        Continue,
                        12..21,
                    ),
                ],
            },
            0..23,
        ),
    ),
]
