---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Input 1 (ERROR) ---
fn test() { a +; }
--- Diagnostics ---
[02] Error: found ';' expected '!', '-', something else, identifier, or '('
   ╭─[ test.cairo:1:16 ]
   │
 1 │ fn test() { a +; }
   │                ┬  
   │                ╰── found ';' expected '!', '-', something else, identifier, or '('
───╯

============================================================

--- Input 2 (ERROR) ---
fn test() { + b; }
--- Diagnostics ---
[02] Error: found '+' expected '{', 'if', 'loop', 'while', 'for', 'break', 'continue', 'let', 'const', 'return', '!', '-', something else, identifier, '(', or '}'
   ╭─[ test.cairo:1:13 ]
   │
 1 │ fn test() { + b; }
   │             ┬  
   │             ╰── found '+' expected '{', 'if', 'loop', 'while', 'for', 'break', 'continue', 'let', 'const', 'return', '!', '-', something else, identifier, '(', or '}'
───╯

============================================================

--- Input 3 (ERROR) ---
fn test() { a ==; }
--- Diagnostics ---
[02] Error: found ';' expected '!', '-', something else, identifier, or '('
   ╭─[ test.cairo:1:17 ]
   │
 1 │ fn test() { a ==; }
   │                 ┬  
   │                 ╰── found ';' expected '!', '-', something else, identifier, or '('
───╯

============================================================

--- Input 4 (ERROR) ---
fn test() { && b; }
--- Diagnostics ---
[02] Error: found '&&' expected '{', 'if', 'loop', 'while', 'for', 'break', 'continue', 'let', 'const', 'return', '!', '-', something else, identifier, '(', or '}'
   ╭─[ test.cairo:1:13 ]
   │
 1 │ fn test() { && b; }
   │             ─┬  
   │              ╰── found '&&' expected '{', 'if', 'loop', 'while', 'for', 'break', 'continue', 'let', 'const', 'return', '!', '-', something else, identifier, '(', or '}'
───╯

============================================================

--- Input 5 (ERROR) ---
fn test() { a | b; }
--- Diagnostics ---
[01] Error: Invalid character
   ╭─[ test.cairo:1:15 ]
   │
 1 │ fn test() { a | b; }
   │               ┬  
   │               ╰── Invalid character
───╯

============================================================

--- Input 6 (ERROR) ---
fn test() { a & b; }
--- Diagnostics ---
[01] Error: Invalid character
   ╭─[ test.cairo:1:15 ]
   │
 1 │ fn test() { a & b; }
   │               ┬  
   │               ╰── Invalid character
───╯

============================================================

--- Input 7 (ERROR) ---
fn test() { a ^ b; }
--- Diagnostics ---
[01] Error: Invalid character
   ╭─[ test.cairo:1:15 ]
   │
 1 │ fn test() { a ^ b; }
   │               ┬  
   │               ╰── Invalid character
───╯

============================================================

--- Input 8 (ERROR) ---
fn test() { a << b; }
--- Diagnostics ---
[02] Error: found '<' expected '!', '-', something else, identifier, or '('
   ╭─[ test.cairo:1:16 ]
   │
 1 │ fn test() { a << b; }
   │                ┬  
   │                ╰── found '<' expected '!', '-', something else, identifier, or '('
───╯

============================================================

--- Input 9 (ERROR) ---
fn test() { a >> b; }
--- Diagnostics ---
[02] Error: found '>' expected '!', '-', something else, identifier, or '('
   ╭─[ test.cairo:1:16 ]
   │
 1 │ fn test() { a >> b; }
   │                ┬  
   │                ╰── found '>' expected '!', '-', something else, identifier, or '('
───╯

============================================================

--- Input 10 (ERROR) ---
fn test() { a % b; }
--- Diagnostics ---
[01] Error: Invalid character
   ╭─[ test.cairo:1:15 ]
   │
 1 │ fn test() { a % b; }
   │               ┬  
   │               ╰── Invalid character
───╯

============================================================

--- Input 11 (ERROR) ---
fn test() { a ** b; }
--- Diagnostics ---
[02] Error: found '*' expected '!', '-', something else, identifier, or '('
   ╭─[ test.cairo:1:16 ]
   │
 1 │ fn test() { a ** b; }
   │                ┬  
   │                ╰── found '*' expected '!', '-', something else, identifier, or '('
───╯
