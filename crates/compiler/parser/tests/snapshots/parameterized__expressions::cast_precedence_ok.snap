---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Input 1 ---
fn test() { x as felt && y; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: And,
                                    left: Spanned(
                                        Cast {
                                            expr: Spanned(
                                                Identifier(
                                                    Spanned(
                                                        "x",
                                                        12..13,
                                                    ),
                                                ),
                                                12..13,
                                            ),
                                            target_type: Spanned(
                                                Named(
                                                    Spanned(
                                                        Felt,
                                                        17..21,
                                                    ),
                                                ),
                                                17..21,
                                            ),
                                        },
                                        12..21,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "y",
                                                25..26,
                                            ),
                                        ),
                                        25..26,
                                    ),
                                },
                                12..26,
                            ),
                        ),
                        12..27,
                    ),
                ],
            },
            0..29,
        ),
    ),
]
============================================================

--- Input 2 ---
fn test() { x & 0xFF as felt; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: BitwiseAnd,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "x",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Cast {
                                            expr: Spanned(
                                                Literal(
                                                    255,
                                                    None,
                                                ),
                                                16..20,
                                            ),
                                            target_type: Spanned(
                                                Named(
                                                    Spanned(
                                                        Felt,
                                                        24..28,
                                                    ),
                                                ),
                                                24..28,
                                            ),
                                        },
                                        16..28,
                                    ),
                                },
                                12..28,
                            ),
                        ),
                        12..29,
                    ),
                ],
            },
            0..31,
        ),
    ),
]
============================================================

--- Input 3 ---
fn test() { x as felt == 42; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Spanned(
                    Tuple(
                        [],
                    ),
                    0..0,
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Eq,
                                    left: Spanned(
                                        Cast {
                                            expr: Spanned(
                                                Identifier(
                                                    Spanned(
                                                        "x",
                                                        12..13,
                                                    ),
                                                ),
                                                12..13,
                                            ),
                                            target_type: Spanned(
                                                Named(
                                                    Spanned(
                                                        Felt,
                                                        17..21,
                                                    ),
                                                ),
                                                17..21,
                                            ),
                                        },
                                        12..21,
                                    ),
                                    right: Spanned(
                                        Literal(
                                            42,
                                            None,
                                        ),
                                        25..27,
                                    ),
                                },
                                12..27,
                            ),
                        ),
                        12..28,
                    ),
                ],
            },
            0..30,
        ),
    ),
]
