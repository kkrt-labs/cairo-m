---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Code ---
fn add(a: felt, b: felt) -> felt { return a + b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "add",
                    3..6,
                ),
                params: [
                    Parameter {
                        name: Spanned(
                            "a",
                            7..8,
                        ),
                        type_expr: Named(
                            Felt,
                        ),
                    },
                    Parameter {
                        name: Spanned(
                            "b",
                            16..17,
                        ),
                        type_expr: Named(
                            Felt,
                        ),
                    },
                ],
                return_type: Named(
                    Felt,
                ),
                body: [
                    Spanned(
                        Return {
                            value: Some(
                                Spanned(
                                    BinaryOp {
                                        op: Add,
                                        left: Spanned(
                                            Identifier(
                                                Spanned(
                                                    "a",
                                                    42..43,
                                                ),
                                            ),
                                            42..43,
                                        ),
                                        right: Spanned(
                                            Identifier(
                                                Spanned(
                                                    "b",
                                                    46..47,
                                                ),
                                            ),
                                            46..47,
                                        ),
                                    },
                                    42..47,
                                ),
                            ),
                        },
                        35..48,
                    ),
                ],
            },
            0..50,
        ),
    ),
]
