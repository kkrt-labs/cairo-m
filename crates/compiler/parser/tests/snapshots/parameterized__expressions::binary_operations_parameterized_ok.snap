---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Input 1 ---
fn test() { a + b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Add,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                16..17,
                                            ),
                                        ),
                                        16..17,
                                    ),
                                },
                                12..17,
                            ),
                        ),
                        12..18,
                    ),
                ],
            },
            0..20,
        ),
    ),
]
============================================================

--- Input 2 ---
fn test() { a - b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Sub,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                16..17,
                                            ),
                                        ),
                                        16..17,
                                    ),
                                },
                                12..17,
                            ),
                        ),
                        12..18,
                    ),
                ],
            },
            0..20,
        ),
    ),
]
============================================================

--- Input 3 ---
fn test() { a * b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Mul,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                16..17,
                                            ),
                                        ),
                                        16..17,
                                    ),
                                },
                                12..17,
                            ),
                        ),
                        12..18,
                    ),
                ],
            },
            0..20,
        ),
    ),
]
============================================================

--- Input 4 ---
fn test() { a / b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Div,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                16..17,
                                            ),
                                        ),
                                        16..17,
                                    ),
                                },
                                12..17,
                            ),
                        ),
                        12..18,
                    ),
                ],
            },
            0..20,
        ),
    ),
]
============================================================

--- Input 5 ---
fn test() { a == b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Eq,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                17..18,
                                            ),
                                        ),
                                        17..18,
                                    ),
                                },
                                12..18,
                            ),
                        ),
                        12..19,
                    ),
                ],
            },
            0..21,
        ),
    ),
]
============================================================

--- Input 6 ---
fn test() { a != b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Neq,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                17..18,
                                            ),
                                        ),
                                        17..18,
                                    ),
                                },
                                12..18,
                            ),
                        ),
                        12..19,
                    ),
                ],
            },
            0..21,
        ),
    ),
]
============================================================

--- Input 7 ---
fn test() { a < b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Less,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                16..17,
                                            ),
                                        ),
                                        16..17,
                                    ),
                                },
                                12..17,
                            ),
                        ),
                        12..18,
                    ),
                ],
            },
            0..20,
        ),
    ),
]
============================================================

--- Input 8 ---
fn test() { a <= b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: LessEqual,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                17..18,
                                            ),
                                        ),
                                        17..18,
                                    ),
                                },
                                12..18,
                            ),
                        ),
                        12..19,
                    ),
                ],
            },
            0..21,
        ),
    ),
]
============================================================

--- Input 9 ---
fn test() { a > b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Greater,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                16..17,
                                            ),
                                        ),
                                        16..17,
                                    ),
                                },
                                12..17,
                            ),
                        ),
                        12..18,
                    ),
                ],
            },
            0..20,
        ),
    ),
]
============================================================

--- Input 10 ---
fn test() { a >= b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: GreaterEqual,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                17..18,
                                            ),
                                        ),
                                        17..18,
                                    ),
                                },
                                12..18,
                            ),
                        ),
                        12..19,
                    ),
                ],
            },
            0..21,
        ),
    ),
]
============================================================

--- Input 11 ---
fn test() { a && b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: And,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                17..18,
                                            ),
                                        ),
                                        17..18,
                                    ),
                                },
                                12..18,
                            ),
                        ),
                        12..19,
                    ),
                ],
            },
            0..21,
        ),
    ),
]
============================================================

--- Input 12 ---
fn test() { a || b; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Or,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        Identifier(
                                            Spanned(
                                                "b",
                                                17..18,
                                            ),
                                        ),
                                        17..18,
                                    ),
                                },
                                12..18,
                            ),
                        ),
                        12..19,
                    ),
                ],
            },
            0..21,
        ),
    ),
]
