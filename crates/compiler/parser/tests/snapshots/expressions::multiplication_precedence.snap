---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Code ---
fn test() { a + b * c; }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Expression(
                            Spanned(
                                BinaryOp {
                                    op: Add,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "a",
                                                12..13,
                                            ),
                                        ),
                                        12..13,
                                    ),
                                    right: Spanned(
                                        BinaryOp {
                                            op: Mul,
                                            left: Spanned(
                                                Identifier(
                                                    Spanned(
                                                        "b",
                                                        16..17,
                                                    ),
                                                ),
                                                16..17,
                                            ),
                                            right: Spanned(
                                                Identifier(
                                                    Spanned(
                                                        "c",
                                                        20..21,
                                                    ),
                                                ),
                                                20..21,
                                            ),
                                        },
                                        16..21,
                                    ),
                                },
                                12..21,
                            ),
                        ),
                        12..22,
                    ),
                ],
            },
            0..24,
        ),
    ),
]
