---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Code ---
fn test() { let (sum, diff) = (a + b, a - b); }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    3..7,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        Let {
                            pattern: Tuple(
                                [
                                    Spanned(
                                        "sum",
                                        17..20,
                                    ),
                                    Spanned(
                                        "diff",
                                        22..26,
                                    ),
                                ],
                            ),
                            statement_type: None,
                            value: Spanned(
                                Tuple(
                                    [
                                        Spanned(
                                            BinaryOp {
                                                op: Add,
                                                left: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "a",
                                                            31..32,
                                                        ),
                                                    ),
                                                    31..32,
                                                ),
                                                right: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "b",
                                                            35..36,
                                                        ),
                                                    ),
                                                    35..36,
                                                ),
                                            },
                                            31..36,
                                        ),
                                        Spanned(
                                            BinaryOp {
                                                op: Sub,
                                                left: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "a",
                                                            38..39,
                                                        ),
                                                    ),
                                                    38..39,
                                                ),
                                                right: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "b",
                                                            42..43,
                                                        ),
                                                    ),
                                                    42..43,
                                                ),
                                            },
                                            38..43,
                                        ),
                                    ],
                                ),
                                30..44,
                            ),
                        },
                        12..45,
                    ),
                ],
            },
            0..47,
        ),
    ),
]
