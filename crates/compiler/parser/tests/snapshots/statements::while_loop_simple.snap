---
source: crates/compiler/parser/tests/common.rs
expression: snapshot
---
--- Code ---
func test() { while (x != 10) { x = x + 1; } }
--- AST ---
[
    Function(
        Spanned(
            FunctionDef {
                name: Spanned(
                    "test",
                    5..9,
                ),
                params: [],
                return_type: Tuple(
                    [],
                ),
                body: [
                    Spanned(
                        While {
                            condition: Spanned(
                                BinaryOp {
                                    op: Neq,
                                    left: Spanned(
                                        Identifier(
                                            Spanned(
                                                "x",
                                                21..22,
                                            ),
                                        ),
                                        21..22,
                                    ),
                                    right: Spanned(
                                        Literal(
                                            10,
                                        ),
                                        26..28,
                                    ),
                                },
                                21..28,
                            ),
                            body: Spanned(
                                Block(
                                    [
                                        Spanned(
                                            Assignment {
                                                lhs: Spanned(
                                                    Identifier(
                                                        Spanned(
                                                            "x",
                                                            32..33,
                                                        ),
                                                    ),
                                                    32..33,
                                                ),
                                                rhs: Spanned(
                                                    BinaryOp {
                                                        op: Add,
                                                        left: Spanned(
                                                            Identifier(
                                                                Spanned(
                                                                    "x",
                                                                    36..37,
                                                                ),
                                                            ),
                                                            36..37,
                                                        ),
                                                        right: Spanned(
                                                            Literal(
                                                                1,
                                                            ),
                                                            40..41,
                                                        ),
                                                    },
                                                    36..41,
                                                ),
                                            },
                                            32..42,
                                        ),
                                    ],
                                ),
                                30..44,
                            ),
                        },
                        14..44,
                    ),
                ],
            },
            0..46,
        ),
    ),
]
