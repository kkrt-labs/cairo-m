{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Cairo-M",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#imports"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#types"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "imports": {
      "patterns": [
        {
          "match": "(use)\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:::[a-zA-Z_][a-zA-Z0-9_]*)*)\\s*::\\s*\\{([^}]+)\\}\\s*;",
          "captures": {
            "1": {
              "name": "keyword.other.import.cairo-m"
            },
            "2": {
              "name": "entity.name.module.cairo-m"
            },
            "3": {
              "patterns": [
                {
                  "match": "[a-zA-Z_][a-zA-Z0-9_]*",
                  "name": "entity.name.function.cairo-m"
                }
              ]
            }
          }
        },
        {
          "match": "(use)\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:::[a-zA-Z_][a-zA-Z0-9_]*)*)\\s*::\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*;",
          "captures": {
            "1": {
              "name": "keyword.other.import.cairo-m"
            },
            "2": {
              "name": "entity.name.module.cairo-m"
            },
            "3": {
              "name": "entity.name.function.cairo-m"
            }
          }
        },
        {
          "match": "::",
          "name": "punctuation.separator.namespace.cairo-m"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.cairo-m",
          "match": "//.*$"
        },
        {
          "name": "comment.block.cairo-m",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.cairo-m",
          "match": "\\b(if|else|while|loop|for|in|break|continue|return)\\b"
        },
        {
          "name": "keyword.other.cairo-m",
          "match": "\\b(func|let|local|const|struct|namespace|use|as)\\b"
        },
        {
          "name": "constant.language.boolean.cairo-m",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.cairo-m",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.cairo-m",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.cairo-m",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.cairo-m",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.cairo-m",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.octal.cairo-m",
          "match": "\\b0[oO][0-7]+\\b"
        },
        {
          "name": "constant.numeric.binary.cairo-m",
          "match": "\\b0[bB][01]+\\b"
        },
        {
          "name": "constant.numeric.decimal.cairo-m",
          "match": "\\b[0-9]+\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "support.type.primitive.cairo-m",
          "match": "\\b(felt)\\b"
        },
        {
          "name": "entity.name.type.cairo-m",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "match": "(func)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "captures": {
            "1": {
              "name": "keyword.other.cairo-m"
            },
            "2": {
              "name": "entity.name.function.cairo-m"
            }
          }
        },
        {
          "match": "([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "captures": {
            "1": {
              "name": "entity.name.function.cairo-m"
            }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "(let|local|const)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "keyword.other.cairo-m"
            },
            "2": {
              "name": "variable.other.cairo-m"
            }
          }
        },
        {
          "name": "variable.other.cairo-m",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.cairo-m",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.logical.cairo-m",
          "match": "(&&|\\|\\|)"
        },
        {
          "name": "keyword.operator.arithmetic.cairo-m",
          "match": "(\\+|-|\\*|/)"
        },
        {
          "name": "keyword.operator.assignment.cairo-m",
          "match": "="
        },
        {
          "name": "keyword.operator.arrow.cairo-m",
          "match": "->"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.definition.parameters.begin.cairo-m",
          "match": "\\("
        },
        {
          "name": "punctuation.definition.parameters.end.cairo-m",
          "match": "\\)"
        },
        {
          "name": "punctuation.definition.block.begin.cairo-m",
          "match": "\\{"
        },
        {
          "name": "punctuation.definition.block.end.cairo-m",
          "match": "\\}"
        },
        {
          "name": "punctuation.definition.array.begin.cairo-m",
          "match": "\\["
        },
        {
          "name": "punctuation.definition.array.end.cairo-m",
          "match": "\\]"
        },
        {
          "name": "punctuation.separator.cairo-m",
          "match": ","
        },
        {
          "name": "punctuation.terminator.cairo-m",
          "match": ";"
        },
        {
          "name": "punctuation.separator.colon.cairo-m",
          "match": ":"
        },
        {
          "name": "punctuation.accessor.cairo-m",
          "match": "\\."
        }
      ]
    }
  },
  "scopeName": "source.cairo-m"
}
